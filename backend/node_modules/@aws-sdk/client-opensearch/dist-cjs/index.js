"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  AWSServicePrincipal: () => AWSServicePrincipal,
  AcceptInboundConnectionCommand: () => AcceptInboundConnectionCommand,
  AccessDeniedException: () => AccessDeniedException,
  ActionSeverity: () => ActionSeverity,
  ActionStatus: () => ActionStatus,
  ActionType: () => ActionType,
  AddDataSourceCommand: () => AddDataSourceCommand,
  AddDirectQueryDataSourceCommand: () => AddDirectQueryDataSourceCommand,
  AddTagsCommand: () => AddTagsCommand,
  AdvancedSecurityOptionsInputFilterSensitiveLog: () => AdvancedSecurityOptionsInputFilterSensitiveLog,
  AppConfigType: () => AppConfigType,
  ApplicationStatus: () => ApplicationStatus,
  AssociatePackageCommand: () => AssociatePackageCommand,
  AssociatePackagesCommand: () => AssociatePackagesCommand,
  AuthorizeVpcEndpointAccessCommand: () => AuthorizeVpcEndpointAccessCommand,
  AutoTuneDesiredState: () => AutoTuneDesiredState,
  AutoTuneState: () => AutoTuneState,
  AutoTuneType: () => AutoTuneType,
  BaseException: () => BaseException,
  CancelDomainConfigChangeCommand: () => CancelDomainConfigChangeCommand,
  CancelServiceSoftwareUpdateCommand: () => CancelServiceSoftwareUpdateCommand,
  ConfigChangeStatus: () => ConfigChangeStatus,
  ConflictException: () => ConflictException,
  ConnectionMode: () => ConnectionMode,
  CreateApplicationCommand: () => CreateApplicationCommand,
  CreateDomainCommand: () => CreateDomainCommand,
  CreateDomainRequestFilterSensitiveLog: () => CreateDomainRequestFilterSensitiveLog,
  CreateOutboundConnectionCommand: () => CreateOutboundConnectionCommand,
  CreatePackageCommand: () => CreatePackageCommand,
  CreateVpcEndpointCommand: () => CreateVpcEndpointCommand,
  DataSourceStatus: () => DataSourceStatus,
  DataSourceType: () => DataSourceType,
  DeleteApplicationCommand: () => DeleteApplicationCommand,
  DeleteDataSourceCommand: () => DeleteDataSourceCommand,
  DeleteDirectQueryDataSourceCommand: () => DeleteDirectQueryDataSourceCommand,
  DeleteDomainCommand: () => DeleteDomainCommand,
  DeleteInboundConnectionCommand: () => DeleteInboundConnectionCommand,
  DeleteOutboundConnectionCommand: () => DeleteOutboundConnectionCommand,
  DeletePackageCommand: () => DeletePackageCommand,
  DeleteVpcEndpointCommand: () => DeleteVpcEndpointCommand,
  DependencyFailureException: () => DependencyFailureException,
  DeploymentStatus: () => DeploymentStatus,
  DescribeDomainAutoTunesCommand: () => DescribeDomainAutoTunesCommand,
  DescribeDomainChangeProgressCommand: () => DescribeDomainChangeProgressCommand,
  DescribeDomainCommand: () => DescribeDomainCommand,
  DescribeDomainConfigCommand: () => DescribeDomainConfigCommand,
  DescribeDomainHealthCommand: () => DescribeDomainHealthCommand,
  DescribeDomainNodesCommand: () => DescribeDomainNodesCommand,
  DescribeDomainsCommand: () => DescribeDomainsCommand,
  DescribeDryRunProgressCommand: () => DescribeDryRunProgressCommand,
  DescribeInboundConnectionsCommand: () => DescribeInboundConnectionsCommand,
  DescribeInstanceTypeLimitsCommand: () => DescribeInstanceTypeLimitsCommand,
  DescribeOutboundConnectionsCommand: () => DescribeOutboundConnectionsCommand,
  DescribePackagesCommand: () => DescribePackagesCommand,
  DescribePackagesFilterName: () => DescribePackagesFilterName,
  DescribeReservedInstanceOfferingsCommand: () => DescribeReservedInstanceOfferingsCommand,
  DescribeReservedInstancesCommand: () => DescribeReservedInstancesCommand,
  DescribeVpcEndpointsCommand: () => DescribeVpcEndpointsCommand,
  DirectQueryDataSourceType: () => DirectQueryDataSourceType,
  DisabledOperationException: () => DisabledOperationException,
  DissociatePackageCommand: () => DissociatePackageCommand,
  DissociatePackagesCommand: () => DissociatePackagesCommand,
  DomainHealth: () => DomainHealth,
  DomainPackageStatus: () => DomainPackageStatus,
  DomainProcessingStatusType: () => DomainProcessingStatusType,
  DomainState: () => DomainState,
  DryRunMode: () => DryRunMode,
  EngineType: () => EngineType,
  GetApplicationCommand: () => GetApplicationCommand,
  GetCompatibleVersionsCommand: () => GetCompatibleVersionsCommand,
  GetDataSourceCommand: () => GetDataSourceCommand,
  GetDirectQueryDataSourceCommand: () => GetDirectQueryDataSourceCommand,
  GetDomainMaintenanceStatusCommand: () => GetDomainMaintenanceStatusCommand,
  GetPackageVersionHistoryCommand: () => GetPackageVersionHistoryCommand,
  GetUpgradeHistoryCommand: () => GetUpgradeHistoryCommand,
  GetUpgradeStatusCommand: () => GetUpgradeStatusCommand,
  IPAddressType: () => IPAddressType,
  InboundConnectionStatusCode: () => InboundConnectionStatusCode,
  InitiatedBy: () => InitiatedBy,
  InternalException: () => InternalException,
  InvalidPaginationTokenException: () => InvalidPaginationTokenException,
  InvalidTypeException: () => InvalidTypeException,
  LimitExceededException: () => LimitExceededException,
  ListApplicationsCommand: () => ListApplicationsCommand,
  ListDataSourcesCommand: () => ListDataSourcesCommand,
  ListDirectQueryDataSourcesCommand: () => ListDirectQueryDataSourcesCommand,
  ListDomainMaintenancesCommand: () => ListDomainMaintenancesCommand,
  ListDomainNamesCommand: () => ListDomainNamesCommand,
  ListDomainsForPackageCommand: () => ListDomainsForPackageCommand,
  ListInstanceTypeDetailsCommand: () => ListInstanceTypeDetailsCommand,
  ListPackagesForDomainCommand: () => ListPackagesForDomainCommand,
  ListScheduledActionsCommand: () => ListScheduledActionsCommand,
  ListTagsCommand: () => ListTagsCommand,
  ListVersionsCommand: () => ListVersionsCommand,
  ListVpcEndpointAccessCommand: () => ListVpcEndpointAccessCommand,
  ListVpcEndpointsCommand: () => ListVpcEndpointsCommand,
  ListVpcEndpointsForDomainCommand: () => ListVpcEndpointsForDomainCommand,
  LogType: () => LogType,
  MaintenanceStatus: () => MaintenanceStatus,
  MaintenanceType: () => MaintenanceType,
  MasterNodeStatus: () => MasterNodeStatus,
  MasterUserOptionsFilterSensitiveLog: () => MasterUserOptionsFilterSensitiveLog,
  NaturalLanguageQueryGenerationCurrentState: () => NaturalLanguageQueryGenerationCurrentState,
  NaturalLanguageQueryGenerationDesiredState: () => NaturalLanguageQueryGenerationDesiredState,
  NodeOptionsNodeType: () => NodeOptionsNodeType,
  NodeStatus: () => NodeStatus,
  NodeType: () => NodeType,
  OpenSearch: () => OpenSearch,
  OpenSearchClient: () => OpenSearchClient,
  OpenSearchPartitionInstanceType: () => OpenSearchPartitionInstanceType,
  OpenSearchServiceException: () => OpenSearchServiceException,
  OpenSearchWarmPartitionInstanceType: () => OpenSearchWarmPartitionInstanceType,
  OptionState: () => OptionState,
  OutboundConnectionStatusCode: () => OutboundConnectionStatusCode,
  OverallChangeStatus: () => OverallChangeStatus,
  PackageScopeOperationEnum: () => PackageScopeOperationEnum,
  PackageStatus: () => PackageStatus,
  PackageType: () => PackageType,
  PrincipalType: () => PrincipalType,
  PropertyValueType: () => PropertyValueType,
  PurchaseReservedInstanceOfferingCommand: () => PurchaseReservedInstanceOfferingCommand,
  RejectInboundConnectionCommand: () => RejectInboundConnectionCommand,
  RemoveTagsCommand: () => RemoveTagsCommand,
  RequirementLevel: () => RequirementLevel,
  ReservedInstancePaymentOption: () => ReservedInstancePaymentOption,
  ResourceAlreadyExistsException: () => ResourceAlreadyExistsException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  RevokeVpcEndpointAccessCommand: () => RevokeVpcEndpointAccessCommand,
  RolesKeyIdCOption: () => RolesKeyIdCOption,
  RollbackOnDisable: () => RollbackOnDisable,
  SAMLOptionsInputFilterSensitiveLog: () => SAMLOptionsInputFilterSensitiveLog,
  ScheduleAt: () => ScheduleAt,
  ScheduledAutoTuneActionType: () => ScheduledAutoTuneActionType,
  ScheduledAutoTuneSeverityType: () => ScheduledAutoTuneSeverityType,
  ScheduledBy: () => ScheduledBy,
  SkipUnavailableStatus: () => SkipUnavailableStatus,
  SlotNotAvailableException: () => SlotNotAvailableException,
  StartDomainMaintenanceCommand: () => StartDomainMaintenanceCommand,
  StartServiceSoftwareUpdateCommand: () => StartServiceSoftwareUpdateCommand,
  SubjectKeyIdCOption: () => SubjectKeyIdCOption,
  TLSSecurityPolicy: () => TLSSecurityPolicy,
  TimeUnit: () => TimeUnit,
  UpdateApplicationCommand: () => UpdateApplicationCommand,
  UpdateDataSourceCommand: () => UpdateDataSourceCommand,
  UpdateDirectQueryDataSourceCommand: () => UpdateDirectQueryDataSourceCommand,
  UpdateDomainConfigCommand: () => UpdateDomainConfigCommand,
  UpdateDomainConfigRequestFilterSensitiveLog: () => UpdateDomainConfigRequestFilterSensitiveLog,
  UpdatePackageCommand: () => UpdatePackageCommand,
  UpdatePackageScopeCommand: () => UpdatePackageScopeCommand,
  UpdateScheduledActionCommand: () => UpdateScheduledActionCommand,
  UpdateVpcEndpointCommand: () => UpdateVpcEndpointCommand,
  UpgradeDomainCommand: () => UpgradeDomainCommand,
  UpgradeStatus: () => UpgradeStatus,
  UpgradeStep: () => UpgradeStep,
  ValidationException: () => ValidationException,
  VolumeType: () => VolumeType,
  VpcEndpointErrorCode: () => VpcEndpointErrorCode,
  VpcEndpointStatus: () => VpcEndpointStatus,
  ZoneStatus: () => ZoneStatus,
  __Client: () => import_smithy_client.Client,
  paginateDescribeDomainAutoTunes: () => paginateDescribeDomainAutoTunes,
  paginateDescribeInboundConnections: () => paginateDescribeInboundConnections,
  paginateDescribeOutboundConnections: () => paginateDescribeOutboundConnections,
  paginateDescribePackages: () => paginateDescribePackages,
  paginateDescribeReservedInstanceOfferings: () => paginateDescribeReservedInstanceOfferings,
  paginateDescribeReservedInstances: () => paginateDescribeReservedInstances,
  paginateGetPackageVersionHistory: () => paginateGetPackageVersionHistory,
  paginateGetUpgradeHistory: () => paginateGetUpgradeHistory,
  paginateListApplications: () => paginateListApplications,
  paginateListDomainMaintenances: () => paginateListDomainMaintenances,
  paginateListDomainsForPackage: () => paginateListDomainsForPackage,
  paginateListInstanceTypeDetails: () => paginateListInstanceTypeDetails,
  paginateListPackagesForDomain: () => paginateListPackagesForDomain,
  paginateListScheduledActions: () => paginateListScheduledActions,
  paginateListVersions: () => paginateListVersions
});
module.exports = __toCommonJS(index_exports);

// src/OpenSearchClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return Object.assign(options, {
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "es"
  });
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/OpenSearchClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = Object.assign(
    (0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig),
    (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig),
    (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig),
    getHttpAuthExtensionConfiguration(runtimeConfig)
  );
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return Object.assign(
    runtimeConfig,
    (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    resolveHttpAuthRuntimeConfig(extensionConfiguration)
  );
}, "resolveRuntimeExtensions");

// src/OpenSearchClient.ts
var OpenSearchClient = class extends import_smithy_client.Client {
  static {
    __name(this, "OpenSearchClient");
  }
  /**
   * The resolved configuration of OpenSearchClient class. This is resolved and normalized from the {@link OpenSearchClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    super(_config_0);
    this.initConfig = _config_0;
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultOpenSearchHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: /* @__PURE__ */ __name(async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        }), "identityProviderConfigProvider")
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/OpenSearch.ts


// src/commands/AcceptInboundConnectionCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/models_0.ts


// src/models/OpenSearchServiceException.ts

var OpenSearchServiceException = class _OpenSearchServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "OpenSearchServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _OpenSearchServiceException.prototype);
  }
};

// src/models/models_0.ts
var ConnectionMode = {
  DIRECT: "DIRECT",
  VPC_ENDPOINT: "VPC_ENDPOINT"
};
var InboundConnectionStatusCode = {
  ACTIVE: "ACTIVE",
  APPROVED: "APPROVED",
  DELETED: "DELETED",
  DELETING: "DELETING",
  PENDING_ACCEPTANCE: "PENDING_ACCEPTANCE",
  PROVISIONING: "PROVISIONING",
  REJECTED: "REJECTED",
  REJECTING: "REJECTING"
};
var DisabledOperationException = class _DisabledOperationException extends OpenSearchServiceException {
  static {
    __name(this, "DisabledOperationException");
  }
  name = "DisabledOperationException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DisabledOperationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _DisabledOperationException.prototype);
  }
};
var LimitExceededException = class _LimitExceededException extends OpenSearchServiceException {
  static {
    __name(this, "LimitExceededException");
  }
  name = "LimitExceededException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _LimitExceededException.prototype);
  }
};
var ResourceNotFoundException = class _ResourceNotFoundException extends OpenSearchServiceException {
  static {
    __name(this, "ResourceNotFoundException");
  }
  name = "ResourceNotFoundException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
var AccessDeniedException = class _AccessDeniedException extends OpenSearchServiceException {
  static {
    __name(this, "AccessDeniedException");
  }
  name = "AccessDeniedException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
var OptionState = {
  Active: "Active",
  Processing: "Processing",
  RequiresIndexDocuments: "RequiresIndexDocuments"
};
var ActionSeverity = {
  HIGH: "HIGH",
  LOW: "LOW",
  MEDIUM: "MEDIUM"
};
var ActionStatus = {
  COMPLETED: "COMPLETED",
  ELIGIBLE: "ELIGIBLE",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  NOT_ELIGIBLE: "NOT_ELIGIBLE",
  PENDING_UPDATE: "PENDING_UPDATE"
};
var ActionType = {
  JVM_HEAP_SIZE_TUNING: "JVM_HEAP_SIZE_TUNING",
  JVM_YOUNG_GEN_TUNING: "JVM_YOUNG_GEN_TUNING",
  SERVICE_SOFTWARE_UPDATE: "SERVICE_SOFTWARE_UPDATE"
};
var DataSourceType;
((DataSourceType4) => {
  DataSourceType4.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.S3GlueDataCatalog !== void 0) return visitor.S3GlueDataCatalog(value.S3GlueDataCatalog);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(DataSourceType || (DataSourceType = {}));
var BaseException = class _BaseException extends OpenSearchServiceException {
  static {
    __name(this, "BaseException");
  }
  name = "BaseException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BaseException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _BaseException.prototype);
  }
};
var DependencyFailureException = class _DependencyFailureException extends OpenSearchServiceException {
  static {
    __name(this, "DependencyFailureException");
  }
  name = "DependencyFailureException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DependencyFailureException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _DependencyFailureException.prototype);
  }
};
var InternalException = class _InternalException extends OpenSearchServiceException {
  static {
    __name(this, "InternalException");
  }
  name = "InternalException";
  $fault = "server";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _InternalException.prototype);
  }
};
var ValidationException = class _ValidationException extends OpenSearchServiceException {
  static {
    __name(this, "ValidationException");
  }
  name = "ValidationException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
var DirectQueryDataSourceType;
((DirectQueryDataSourceType4) => {
  DirectQueryDataSourceType4.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.CloudWatchLog !== void 0) return visitor.CloudWatchLog(value.CloudWatchLog);
    if (value.SecurityLake !== void 0) return visitor.SecurityLake(value.SecurityLake);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(DirectQueryDataSourceType || (DirectQueryDataSourceType = {}));
var NaturalLanguageQueryGenerationDesiredState = {
  Disabled: "DISABLED",
  Enabled: "ENABLED"
};
var NaturalLanguageQueryGenerationCurrentState = {
  DisableComplete: "DISABLE_COMPLETE",
  DisableFailed: "DISABLE_FAILED",
  DisableInProgress: "DISABLE_IN_PROGRESS",
  EnableComplete: "ENABLE_COMPLETE",
  EnableFailed: "ENABLE_FAILED",
  EnableInProgress: "ENABLE_IN_PROGRESS",
  NotEnabled: "NOT_ENABLED"
};
var DomainPackageStatus = {
  ACTIVE: "ACTIVE",
  ASSOCIATING: "ASSOCIATING",
  ASSOCIATION_FAILED: "ASSOCIATION_FAILED",
  DISSOCIATING: "DISSOCIATING",
  DISSOCIATION_FAILED: "DISSOCIATION_FAILED"
};
var PackageType = {
  PACKAGE_CONFIG: "PACKAGE-CONFIG",
  PACKAGE_LICENSE: "PACKAGE-LICENSE",
  TXT_DICTIONARY: "TXT-DICTIONARY",
  ZIP_PLUGIN: "ZIP-PLUGIN"
};
var ConflictException = class _ConflictException extends OpenSearchServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
  }
};
var AWSServicePrincipal = {
  application_opensearchservice_amazonaws_com: "application.opensearchservice.amazonaws.com"
};
var PrincipalType = {
  AWS_ACCOUNT: "AWS_ACCOUNT",
  AWS_SERVICE: "AWS_SERVICE"
};
var DeploymentStatus = {
  COMPLETED: "COMPLETED",
  ELIGIBLE: "ELIGIBLE",
  IN_PROGRESS: "IN_PROGRESS",
  NOT_ELIGIBLE: "NOT_ELIGIBLE",
  PENDING_UPDATE: "PENDING_UPDATE"
};
var AppConfigType = {
  OpensearchDashboardAdminGroups: "opensearchDashboards.dashboardAdmin.groups",
  OpensearchDashboardAdminUsers: "opensearchDashboards.dashboardAdmin.users"
};
var AutoTuneDesiredState = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var TimeUnit = {
  HOURS: "HOURS"
};
var OpenSearchPartitionInstanceType = {
  c4_2xlarge_search: "c4.2xlarge.search",
  c4_4xlarge_search: "c4.4xlarge.search",
  c4_8xlarge_search: "c4.8xlarge.search",
  c4_large_search: "c4.large.search",
  c4_xlarge_search: "c4.xlarge.search",
  c5_18xlarge_search: "c5.18xlarge.search",
  c5_2xlarge_search: "c5.2xlarge.search",
  c5_4xlarge_search: "c5.4xlarge.search",
  c5_9xlarge_search: "c5.9xlarge.search",
  c5_large_search: "c5.large.search",
  c5_xlarge_search: "c5.xlarge.search",
  c6g_12xlarge_search: "c6g.12xlarge.search",
  c6g_2xlarge_search: "c6g.2xlarge.search",
  c6g_4xlarge_search: "c6g.4xlarge.search",
  c6g_8xlarge_search: "c6g.8xlarge.search",
  c6g_large_search: "c6g.large.search",
  c6g_xlarge_search: "c6g.xlarge.search",
  d2_2xlarge_search: "d2.2xlarge.search",
  d2_4xlarge_search: "d2.4xlarge.search",
  d2_8xlarge_search: "d2.8xlarge.search",
  d2_xlarge_search: "d2.xlarge.search",
  i2_2xlarge_search: "i2.2xlarge.search",
  i2_xlarge_search: "i2.xlarge.search",
  i3_16xlarge_search: "i3.16xlarge.search",
  i3_2xlarge_search: "i3.2xlarge.search",
  i3_4xlarge_search: "i3.4xlarge.search",
  i3_8xlarge_search: "i3.8xlarge.search",
  i3_large_search: "i3.large.search",
  i3_xlarge_search: "i3.xlarge.search",
  m3_2xlarge_search: "m3.2xlarge.search",
  m3_large_search: "m3.large.search",
  m3_medium_search: "m3.medium.search",
  m3_xlarge_search: "m3.xlarge.search",
  m4_10xlarge_search: "m4.10xlarge.search",
  m4_2xlarge_search: "m4.2xlarge.search",
  m4_4xlarge_search: "m4.4xlarge.search",
  m4_large_search: "m4.large.search",
  m4_xlarge_search: "m4.xlarge.search",
  m5_12xlarge_search: "m5.12xlarge.search",
  m5_24xlarge_search: "m5.24xlarge.search",
  m5_2xlarge_search: "m5.2xlarge.search",
  m5_4xlarge_search: "m5.4xlarge.search",
  m5_large_search: "m5.large.search",
  m5_xlarge_search: "m5.xlarge.search",
  m6g_12xlarge_search: "m6g.12xlarge.search",
  m6g_2xlarge_search: "m6g.2xlarge.search",
  m6g_4xlarge_search: "m6g.4xlarge.search",
  m6g_8xlarge_search: "m6g.8xlarge.search",
  m6g_large_search: "m6g.large.search",
  m6g_xlarge_search: "m6g.xlarge.search",
  or1_12xlarge_search: "or1.12xlarge.search",
  or1_16xlarge_search: "or1.16xlarge.search",
  or1_2xlarge_search: "or1.2xlarge.search",
  or1_4xlarge_search: "or1.4xlarge.search",
  or1_8xlarge_search: "or1.8xlarge.search",
  or1_large_search: "or1.large.search",
  or1_medium_search: "or1.medium.search",
  or1_xlarge_search: "or1.xlarge.search",
  r3_2xlarge_search: "r3.2xlarge.search",
  r3_4xlarge_search: "r3.4xlarge.search",
  r3_8xlarge_search: "r3.8xlarge.search",
  r3_large_search: "r3.large.search",
  r3_xlarge_search: "r3.xlarge.search",
  r4_16xlarge_search: "r4.16xlarge.search",
  r4_2xlarge_search: "r4.2xlarge.search",
  r4_4xlarge_search: "r4.4xlarge.search",
  r4_8xlarge_search: "r4.8xlarge.search",
  r4_large_search: "r4.large.search",
  r4_xlarge_search: "r4.xlarge.search",
  r5_12xlarge_search: "r5.12xlarge.search",
  r5_24xlarge_search: "r5.24xlarge.search",
  r5_2xlarge_search: "r5.2xlarge.search",
  r5_4xlarge_search: "r5.4xlarge.search",
  r5_large_search: "r5.large.search",
  r5_xlarge_search: "r5.xlarge.search",
  r6g_12xlarge_search: "r6g.12xlarge.search",
  r6g_2xlarge_search: "r6g.2xlarge.search",
  r6g_4xlarge_search: "r6g.4xlarge.search",
  r6g_8xlarge_search: "r6g.8xlarge.search",
  r6g_large_search: "r6g.large.search",
  r6g_xlarge_search: "r6g.xlarge.search",
  r6gd_12xlarge_search: "r6gd.12xlarge.search",
  r6gd_16xlarge_search: "r6gd.16xlarge.search",
  r6gd_2xlarge_search: "r6gd.2xlarge.search",
  r6gd_4xlarge_search: "r6gd.4xlarge.search",
  r6gd_8xlarge_search: "r6gd.8xlarge.search",
  r6gd_large_search: "r6gd.large.search",
  r6gd_xlarge_search: "r6gd.xlarge.search",
  t2_medium_search: "t2.medium.search",
  t2_micro_search: "t2.micro.search",
  t2_small_search: "t2.small.search",
  t3_2xlarge_search: "t3.2xlarge.search",
  t3_large_search: "t3.large.search",
  t3_medium_search: "t3.medium.search",
  t3_micro_search: "t3.micro.search",
  t3_nano_search: "t3.nano.search",
  t3_small_search: "t3.small.search",
  t3_xlarge_search: "t3.xlarge.search",
  t4g_medium_search: "t4g.medium.search",
  t4g_small_search: "t4g.small.search",
  ultrawarm1_large_search: "ultrawarm1.large.search",
  ultrawarm1_medium_search: "ultrawarm1.medium.search",
  ultrawarm1_xlarge_search: "ultrawarm1.xlarge.search"
};
var NodeOptionsNodeType = {
  COORDINATOR: "coordinator"
};
var OpenSearchWarmPartitionInstanceType = {
  ultrawarm1_large_search: "ultrawarm1.large.search",
  ultrawarm1_medium_search: "ultrawarm1.medium.search",
  ultrawarm1_xlarge_search: "ultrawarm1.xlarge.search"
};
var TLSSecurityPolicy = {
  POLICY_MIN_TLS_1_0_2019_07: "Policy-Min-TLS-1-0-2019-07",
  POLICY_MIN_TLS_1_2_2019_07: "Policy-Min-TLS-1-2-2019-07",
  POLICY_MIN_TLS_1_2_PFS_2023_10: "Policy-Min-TLS-1-2-PFS-2023-10"
};
var VolumeType = {
  gp2: "gp2",
  gp3: "gp3",
  io1: "io1",
  standard: "standard"
};
var RolesKeyIdCOption = {
  GroupId: "GroupId",
  GroupName: "GroupName"
};
var SubjectKeyIdCOption = {
  Email: "Email",
  UserId: "UserId",
  UserName: "UserName"
};
var IPAddressType = {
  DUALSTACK: "dualstack",
  IPV4: "ipv4"
};
var LogType = {
  AUDIT_LOGS: "AUDIT_LOGS",
  ES_APPLICATION_LOGS: "ES_APPLICATION_LOGS",
  INDEX_SLOW_LOGS: "INDEX_SLOW_LOGS",
  SEARCH_SLOW_LOGS: "SEARCH_SLOW_LOGS"
};
var AutoTuneState = {
  DISABLED: "DISABLED",
  DISABLED_AND_ROLLBACK_COMPLETE: "DISABLED_AND_ROLLBACK_COMPLETE",
  DISABLED_AND_ROLLBACK_ERROR: "DISABLED_AND_ROLLBACK_ERROR",
  DISABLED_AND_ROLLBACK_IN_PROGRESS: "DISABLED_AND_ROLLBACK_IN_PROGRESS",
  DISABLED_AND_ROLLBACK_SCHEDULED: "DISABLED_AND_ROLLBACK_SCHEDULED",
  DISABLE_IN_PROGRESS: "DISABLE_IN_PROGRESS",
  ENABLED: "ENABLED",
  ENABLE_IN_PROGRESS: "ENABLE_IN_PROGRESS",
  ERROR: "ERROR"
};
var ConfigChangeStatus = {
  APPLYING_CHANGES: "ApplyingChanges",
  CANCELLED: "Cancelled",
  COMPLETED: "Completed",
  INITIALIZING: "Initializing",
  PENDING: "Pending",
  PENDING_USER_INPUT: "PendingUserInput",
  VALIDATING: "Validating",
  VALIDATION_FAILED: "ValidationFailed"
};
var InitiatedBy = {
  CUSTOMER: "CUSTOMER",
  SERVICE: "SERVICE"
};
var DomainProcessingStatusType = {
  ACTIVE: "Active",
  CREATING: "Creating",
  DELETING: "Deleting",
  ISOLATED: "Isolated",
  MODIFYING: "Modifying",
  UPDATING: "UpdatingServiceSoftware",
  UPGRADING: "UpgradingEngineVersion"
};
var PropertyValueType = {
  PLAIN_TEXT: "PLAIN_TEXT",
  STRINGIFIED_JSON: "STRINGIFIED_JSON"
};
var InvalidTypeException = class _InvalidTypeException extends OpenSearchServiceException {
  static {
    __name(this, "InvalidTypeException");
  }
  name = "InvalidTypeException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidTypeException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidTypeException.prototype);
  }
};
var ResourceAlreadyExistsException = class _ResourceAlreadyExistsException extends OpenSearchServiceException {
  static {
    __name(this, "ResourceAlreadyExistsException");
  }
  name = "ResourceAlreadyExistsException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceAlreadyExistsException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceAlreadyExistsException.prototype);
  }
};
var SkipUnavailableStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var OutboundConnectionStatusCode = {
  ACTIVE: "ACTIVE",
  APPROVED: "APPROVED",
  DELETED: "DELETED",
  DELETING: "DELETING",
  PENDING_ACCEPTANCE: "PENDING_ACCEPTANCE",
  PROVISIONING: "PROVISIONING",
  REJECTED: "REJECTED",
  REJECTING: "REJECTING",
  VALIDATING: "VALIDATING",
  VALIDATION_FAILED: "VALIDATION_FAILED"
};
var RequirementLevel = {
  NONE: "NONE",
  OPTIONAL: "OPTIONAL",
  REQUIRED: "REQUIRED"
};
var PackageStatus = {
  AVAILABLE: "AVAILABLE",
  COPYING: "COPYING",
  COPY_FAILED: "COPY_FAILED",
  DELETED: "DELETED",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING",
  VALIDATING: "VALIDATING",
  VALIDATION_FAILED: "VALIDATION_FAILED"
};
var VpcEndpointStatus = {
  ACTIVE: "ACTIVE",
  CREATE_FAILED: "CREATE_FAILED",
  CREATING: "CREATING",
  DELETE_FAILED: "DELETE_FAILED",
  DELETING: "DELETING",
  UPDATE_FAILED: "UPDATE_FAILED",
  UPDATING: "UPDATING"
};
var ScheduledAutoTuneActionType = {
  JVM_HEAP_SIZE_TUNING: "JVM_HEAP_SIZE_TUNING",
  JVM_YOUNG_GEN_TUNING: "JVM_YOUNG_GEN_TUNING"
};
var ScheduledAutoTuneSeverityType = {
  HIGH: "HIGH",
  LOW: "LOW",
  MEDIUM: "MEDIUM"
};
var AutoTuneType = {
  SCHEDULED_ACTION: "SCHEDULED_ACTION"
};
var OverallChangeStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  PENDING: "PENDING",
  PROCESSING: "PROCESSING"
};
var RollbackOnDisable = {
  DEFAULT_ROLLBACK: "DEFAULT_ROLLBACK",
  NO_ROLLBACK: "NO_ROLLBACK"
};
var DomainHealth = {
  Green: "Green",
  NotAvailable: "NotAvailable",
  Red: "Red",
  Yellow: "Yellow"
};
var DomainState = {
  Active: "Active",
  NotAvailable: "NotAvailable",
  Processing: "Processing"
};
var ZoneStatus = {
  Active: "Active",
  NotAvailable: "NotAvailable",
  StandBy: "StandBy"
};
var MasterNodeStatus = {
  Available: "Available",
  UnAvailable: "UnAvailable"
};
var NodeStatus = {
  Active: "Active",
  NotAvailable: "NotAvailable",
  StandBy: "StandBy"
};
var NodeType = {
  Data: "Data",
  Master: "Master",
  Ultrawarm: "Ultrawarm"
};
var InvalidPaginationTokenException = class _InvalidPaginationTokenException extends OpenSearchServiceException {
  static {
    __name(this, "InvalidPaginationTokenException");
  }
  name = "InvalidPaginationTokenException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidPaginationTokenException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidPaginationTokenException.prototype);
  }
};
var DescribePackagesFilterName = {
  EngineVersion: "EngineVersion",
  PackageID: "PackageID",
  PackageName: "PackageName",
  PackageOwner: "PackageOwner",
  PackageStatus: "PackageStatus",
  PackageType: "PackageType"
};
var ReservedInstancePaymentOption = {
  ALL_UPFRONT: "ALL_UPFRONT",
  NO_UPFRONT: "NO_UPFRONT",
  PARTIAL_UPFRONT: "PARTIAL_UPFRONT"
};
var VpcEndpointErrorCode = {
  ENDPOINT_NOT_FOUND: "ENDPOINT_NOT_FOUND",
  SERVER_ERROR: "SERVER_ERROR"
};
var ApplicationStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  UPDATING: "UPDATING"
};
var DataSourceStatus = {
  ACTIVE: "ACTIVE",
  DISABLED: "DISABLED"
};
var MaintenanceType = {
  REBOOT_NODE: "REBOOT_NODE",
  RESTART_DASHBOARD: "RESTART_DASHBOARD",
  RESTART_SEARCH_PROCESS: "RESTART_SEARCH_PROCESS"
};
var MaintenanceStatus = {
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  PENDING: "PENDING",
  TIMED_OUT: "TIMED_OUT"
};
var UpgradeStep = {
  PRE_UPGRADE_CHECK: "PRE_UPGRADE_CHECK",
  SNAPSHOT: "SNAPSHOT",
  UPGRADE: "UPGRADE"
};
var UpgradeStatus = {
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  SUCCEEDED: "SUCCEEDED",
  SUCCEEDED_WITH_ISSUES: "SUCCEEDED_WITH_ISSUES"
};
var EngineType = {
  Elasticsearch: "Elasticsearch",
  OpenSearch: "OpenSearch"
};
var MasterUserOptionsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MasterUserName && { MasterUserName: import_smithy_client.SENSITIVE_STRING },
  ...obj.MasterUserPassword && { MasterUserPassword: import_smithy_client.SENSITIVE_STRING }
}), "MasterUserOptionsFilterSensitiveLog");
var SAMLOptionsInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MasterUserName && { MasterUserName: import_smithy_client.SENSITIVE_STRING }
}), "SAMLOptionsInputFilterSensitiveLog");
var AdvancedSecurityOptionsInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MasterUserOptions && { MasterUserOptions: MasterUserOptionsFilterSensitiveLog(obj.MasterUserOptions) },
  ...obj.SAMLOptions && { SAMLOptions: SAMLOptionsInputFilterSensitiveLog(obj.SAMLOptions) }
}), "AdvancedSecurityOptionsInputFilterSensitiveLog");
var CreateDomainRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AdvancedSecurityOptions && {
    AdvancedSecurityOptions: AdvancedSecurityOptionsInputFilterSensitiveLog(obj.AdvancedSecurityOptions)
  }
}), "CreateDomainRequestFilterSensitiveLog");

// src/models/models_1.ts
var ScheduledBy = {
  CUSTOMER: "CUSTOMER",
  SYSTEM: "SYSTEM"
};
var ScheduleAt = {
  NOW: "NOW",
  OFF_PEAK_WINDOW: "OFF_PEAK_WINDOW",
  TIMESTAMP: "TIMESTAMP"
};
var DryRunMode = {
  Basic: "Basic",
  Verbose: "Verbose"
};
var PackageScopeOperationEnum = {
  ADD: "ADD",
  OVERRIDE: "OVERRIDE",
  REMOVE: "REMOVE"
};
var SlotNotAvailableException = class _SlotNotAvailableException extends OpenSearchServiceException {
  static {
    __name(this, "SlotNotAvailableException");
  }
  name = "SlotNotAvailableException";
  $fault = "client";
  /**
   * <p>Alternate time slots during which OpenSearch Service has available capacity to schedule a domain action.</p>
   * @public
   */
  SlotSuggestions;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "SlotNotAvailableException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _SlotNotAvailableException.prototype);
    this.SlotSuggestions = opts.SlotSuggestions;
  }
};
var UpdateDomainConfigRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.AdvancedSecurityOptions && {
    AdvancedSecurityOptions: AdvancedSecurityOptionsInputFilterSensitiveLog(obj.AdvancedSecurityOptions)
  }
}), "UpdateDomainConfigRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_AcceptInboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/accept");
  b.p("ConnectionId", () => input.ConnectionId, "{ConnectionId}", false);
  let body;
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_AcceptInboundConnectionCommand");
var se_AddDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DataSourceType: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "DataSourceType"),
      Description: [],
      Name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AddDataSourceCommand");
var se_AddDirectQueryDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/directQueryDataSource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DataSourceName: [],
      DataSourceType: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "DataSourceType"),
      Description: [],
      OpenSearchArns: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "OpenSearchArns"),
      TagList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagList")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AddDirectQueryDataSourceCommand");
var se_AddTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/tags");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ARN: [],
      TagList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagList")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AddTagsCommand");
var se_AssociatePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages/associate/{PackageID}/{DomainName}");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AssociationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AssociationConfiguration"),
      PrerequisitePackageIDList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PrerequisitePackageIDList")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociatePackageCommand");
var se_AssociatePackagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages/associateMultiple");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DomainName: [],
      PackageList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageList")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociatePackagesCommand");
var se_AuthorizeVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/authorizeVpcEndpointAccess");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Account: [],
      Service: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AuthorizeVpcEndpointAccessCommand");
var se_CancelDomainConfigChangeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/config/cancel");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DryRun: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelDomainConfigChangeCommand");
var se_CancelServiceSoftwareUpdateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/serviceSoftwareUpdate/cancel");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DomainName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelServiceSoftwareUpdateCommand");
var se_CreateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/application");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      appConfigs: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "appConfigs"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      dataSources: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "dataSources"),
      iamIdentityCenterOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "iamIdentityCenterOptions"),
      name: [],
      tagList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tagList")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApplicationCommand");
var se_CreateDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AIMLOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AIMLOptions"),
      AccessPolicies: [],
      AdvancedOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AdvancedOptions"),
      AdvancedSecurityOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AdvancedSecurityOptions"),
      AutoTuneOptions: /* @__PURE__ */ __name((_) => se_AutoTuneOptionsInput(_, context), "AutoTuneOptions"),
      ClusterConfig: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ClusterConfig"),
      CognitoOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "CognitoOptions"),
      DomainEndpointOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "DomainEndpointOptions"),
      DomainName: [],
      EBSOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "EBSOptions"),
      EncryptionAtRestOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "EncryptionAtRestOptions"),
      EngineVersion: [],
      IPAddressType: [],
      IdentityCenterOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "IdentityCenterOptions"),
      LogPublishingOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "LogPublishingOptions"),
      NodeToNodeEncryptionOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "NodeToNodeEncryptionOptions"),
      OffPeakWindowOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "OffPeakWindowOptions"),
      SnapshotOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SnapshotOptions"),
      SoftwareUpdateOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SoftwareUpdateOptions"),
      TagList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagList"),
      VPCOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "VPCOptions")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDomainCommand");
var se_CreateOutboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/cc/outboundConnection");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ConnectionAlias: [],
      ConnectionMode: [],
      ConnectionProperties: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ConnectionProperties"),
      LocalDomainInfo: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "LocalDomainInfo"),
      RemoteDomainInfo: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "RemoteDomainInfo")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateOutboundConnectionCommand");
var se_CreatePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      EngineVersion: [],
      PackageConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageConfiguration"),
      PackageDescription: [],
      PackageEncryptionOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageEncryptionOptions"),
      PackageName: [],
      PackageSource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageSource"),
      PackageType: [],
      PackageVendingOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageVendingOptions")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreatePackageCommand");
var se_CreateVpcEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/vpcEndpoints");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientToken: [],
      DomainArn: [],
      VpcOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "VpcOptions")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateVpcEndpointCommand");
var se_DeleteApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/application/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteApplicationCommand");
var se_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource/{Name}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDataSourceCommand");
var se_DeleteDirectQueryDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/directQueryDataSource/{DataSourceName}");
  b.p("DataSourceName", () => input.DataSourceName, "{DataSourceName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDirectQueryDataSourceCommand");
var se_DeleteDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDomainCommand");
var se_DeleteInboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}");
  b.p("ConnectionId", () => input.ConnectionId, "{ConnectionId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteInboundConnectionCommand");
var se_DeleteOutboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/cc/outboundConnection/{ConnectionId}");
  b.p("ConnectionId", () => input.ConnectionId, "{ConnectionId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteOutboundConnectionCommand");
var se_DeletePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/packages/{PackageID}");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeletePackageCommand");
var se_DeleteVpcEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/vpcEndpoints/{VpcEndpointId}");
  b.p("VpcEndpointId", () => input.VpcEndpointId, "{VpcEndpointId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteVpcEndpointCommand");
var se_DescribeDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainCommand");
var se_DescribeDomainAutoTunesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/autoTunes");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainAutoTunesCommand");
var se_DescribeDomainChangeProgressCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/progress");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_c]: [, input[_CI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeDomainChangeProgressCommand");
var se_DescribeDomainConfigCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/config");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainConfigCommand");
var se_DescribeDomainHealthCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/health");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainHealthCommand");
var se_DescribeDomainNodesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/nodes");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainNodesCommand");
var se_DescribeDomainsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain-info");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DomainNames: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "DomainNames")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeDomainsCommand");
var se_DescribeDryRunProgressCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dryRun");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_dRI]: [, input[_DRI]],
    [_lDRC]: [() => input.LoadDryRunConfig !== void 0, () => input[_LDRC].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeDryRunProgressCommand");
var se_DescribeInboundConnectionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/cc/inboundConnection/search");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Filters"),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeInboundConnectionsCommand");
var se_DescribeInstanceTypeLimitsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/instanceTypeLimits/{EngineVersion}/{InstanceType}");
  b.p("InstanceType", () => input.InstanceType, "{InstanceType}", false);
  b.p("EngineVersion", () => input.EngineVersion, "{EngineVersion}", false);
  const query = (0, import_smithy_client.map)({
    [_dN]: [, input[_DN]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeInstanceTypeLimitsCommand");
var se_DescribeOutboundConnectionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/cc/outboundConnection/search");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Filters"),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeOutboundConnectionsCommand");
var se_DescribePackagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages/describe");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Filters: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Filters"),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribePackagesCommand");
var se_DescribeReservedInstanceOfferingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/reservedInstanceOfferings");
  const query = (0, import_smithy_client.map)({
    [_oI]: [, input[_RIOI]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeReservedInstanceOfferingsCommand");
var se_DescribeReservedInstancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/reservedInstances");
  const query = (0, import_smithy_client.map)({
    [_rI]: [, input[_RII]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_DescribeReservedInstancesCommand");
var se_DescribeVpcEndpointsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/vpcEndpoints/describe");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      VpcEndpointIds: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "VpcEndpointIds")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeVpcEndpointsCommand");
var se_DissociatePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/packages/dissociate/{PackageID}/{DomainName}");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DissociatePackageCommand");
var se_DissociatePackagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages/dissociateMultiple");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DomainName: [],
      PackageList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageList")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DissociatePackagesCommand");
var se_GetApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/application/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetApplicationCommand");
var se_GetCompatibleVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/compatibleVersions");
  const query = (0, import_smithy_client.map)({
    [_dN]: [, input[_DN]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetCompatibleVersionsCommand");
var se_GetDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource/{Name}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDataSourceCommand");
var se_GetDirectQueryDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/directQueryDataSource/{DataSourceName}");
  b.p("DataSourceName", () => input.DataSourceName, "{DataSourceName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDirectQueryDataSourceCommand");
var se_GetDomainMaintenanceStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/domainMaintenance");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_mI]: [, (0, import_smithy_client.expectNonNull)(input[_MI], `MaintenanceId`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetDomainMaintenanceStatusCommand");
var se_GetPackageVersionHistoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/packages/{PackageID}/history");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetPackageVersionHistoryCommand");
var se_GetUpgradeHistoryCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/upgradeDomain/{DomainName}/history");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetUpgradeHistoryCommand");
var se_GetUpgradeStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/upgradeDomain/{DomainName}/status");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetUpgradeStatusCommand");
var se_ListApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/list-applications");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_s]: [() => input.statuses !== void 0, () => input[_s] || []],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApplicationsCommand");
var se_ListDataSourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListDataSourcesCommand");
var se_ListDirectQueryDataSourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/directQueryDataSource");
  const query = (0, import_smithy_client.map)({
    [_n]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDirectQueryDataSourcesCommand");
var se_ListDomainMaintenancesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/domainMaintenances");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_a]: [, input[_A]],
    [_st]: [, input[_S]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDomainMaintenancesCommand");
var se_ListDomainNamesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/domain");
  const query = (0, import_smithy_client.map)({
    [_eT]: [, input[_ET]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDomainNamesCommand");
var se_ListDomainsForPackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/packages/{PackageID}/domains");
  b.p("PackageID", () => input.PackageID, "{PackageID}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDomainsForPackageCommand");
var se_ListInstanceTypeDetailsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/instanceTypeDetails/{EngineVersion}");
  b.p("EngineVersion", () => input.EngineVersion, "{EngineVersion}", false);
  const query = (0, import_smithy_client.map)({
    [_dN]: [, input[_DN]],
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]],
    [_rAZ]: [() => input.RetrieveAZs !== void 0, () => input[_RAZ].toString()],
    [_iT]: [, input[_IT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListInstanceTypeDetailsCommand");
var se_ListPackagesForDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/domain/{DomainName}/packages");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPackagesForDomainCommand");
var se_ListScheduledActionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/scheduledActions");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListScheduledActionsCommand");
var se_ListTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/tags");
  const query = (0, import_smithy_client.map)({
    [_ar]: [, (0, import_smithy_client.expectNonNull)(input[_ARN], `ARN`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListTagsCommand");
var se_ListVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/versions");
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.MaxResults !== void 0, () => input[_MR].toString()],
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListVersionsCommand");
var se_ListVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/listVpcEndpointAccess");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListVpcEndpointAccessCommand");
var se_ListVpcEndpointsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/vpcEndpoints");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListVpcEndpointsCommand");
var se_ListVpcEndpointsForDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/vpcEndpoints");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_NT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListVpcEndpointsForDomainCommand");
var se_PurchaseReservedInstanceOfferingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/purchaseReservedInstanceOffering");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      InstanceCount: [],
      ReservationName: [],
      ReservedInstanceOfferingId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PurchaseReservedInstanceOfferingCommand");
var se_RejectInboundConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/reject");
  b.p("ConnectionId", () => input.ConnectionId, "{ConnectionId}", false);
  let body;
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_RejectInboundConnectionCommand");
var se_RemoveTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/tags-removal");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ARN: [],
      TagKeys: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagKeys")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RemoveTagsCommand");
var se_RevokeVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/revokeVpcEndpointAccess");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Account: [],
      Service: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RevokeVpcEndpointAccessCommand");
var se_StartDomainMaintenanceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/domainMaintenance");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Action: [],
      NodeId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartDomainMaintenanceCommand");
var se_StartServiceSoftwareUpdateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/serviceSoftwareUpdate/start");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DesiredStartTime: [],
      DomainName: [],
      ScheduleAt: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartServiceSoftwareUpdateCommand");
var se_UpdateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/application/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      appConfigs: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "appConfigs"),
      dataSources: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "dataSources")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateApplicationCommand");
var se_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/dataSource/{Name}");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  b.p("Name", () => input.Name, "{Name}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DataSourceType: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "DataSourceType"),
      Description: [],
      Status: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateDataSourceCommand");
var se_UpdateDirectQueryDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/directQueryDataSource/{DataSourceName}");
  b.p("DataSourceName", () => input.DataSourceName, "{DataSourceName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DataSourceType: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "DataSourceType"),
      Description: [],
      OpenSearchArns: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "OpenSearchArns")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateDirectQueryDataSourceCommand");
var se_UpdateDomainConfigCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/config");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AIMLOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AIMLOptions"),
      AccessPolicies: [],
      AdvancedOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AdvancedOptions"),
      AdvancedSecurityOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AdvancedSecurityOptions"),
      AutoTuneOptions: /* @__PURE__ */ __name((_) => se_AutoTuneOptions(_, context), "AutoTuneOptions"),
      ClusterConfig: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ClusterConfig"),
      CognitoOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "CognitoOptions"),
      DomainEndpointOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "DomainEndpointOptions"),
      DryRun: [],
      DryRunMode: [],
      EBSOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "EBSOptions"),
      EncryptionAtRestOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "EncryptionAtRestOptions"),
      IPAddressType: [],
      IdentityCenterOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "IdentityCenterOptions"),
      LogPublishingOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "LogPublishingOptions"),
      NodeToNodeEncryptionOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "NodeToNodeEncryptionOptions"),
      OffPeakWindowOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "OffPeakWindowOptions"),
      SnapshotOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SnapshotOptions"),
      SoftwareUpdateOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SoftwareUpdateOptions"),
      VPCOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "VPCOptions")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateDomainConfigCommand");
var se_UpdatePackageCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages/update");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CommitMessage: [],
      PackageConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageConfiguration"),
      PackageDescription: [],
      PackageEncryptionOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageEncryptionOptions"),
      PackageID: [],
      PackageSource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageSource")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdatePackageCommand");
var se_UpdatePackageScopeCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/packages/updateScope");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Operation: [],
      PackageID: [],
      PackageUserList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PackageUserList")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdatePackageScopeCommand");
var se_UpdateScheduledActionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/domain/{DomainName}/scheduledAction/update");
  b.p("DomainName", () => input.DomainName, "{DomainName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ActionID: [],
      ActionType: [],
      DesiredStartTime: [],
      ScheduleAt: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateScheduledActionCommand");
var se_UpdateVpcEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/vpcEndpoints/update");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      VpcEndpointId: [],
      VpcOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "VpcOptions")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateVpcEndpointCommand");
var se_UpgradeDomainCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/2021-01-01/opensearch/upgradeDomain");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AdvancedOptions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AdvancedOptions"),
      DomainName: [],
      PerformCheckOnly: [],
      TargetVersion: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpgradeDomainCommand");
var de_AcceptInboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connection: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AcceptInboundConnectionCommand");
var de_AddDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AddDataSourceCommand");
var de_AddDirectQueryDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataSourceArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AddDirectQueryDataSourceCommand");
var de_AddTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_AddTagsCommand");
var de_AssociatePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetails: /* @__PURE__ */ __name((_) => de_DomainPackageDetails(_, context), "DomainPackageDetails")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociatePackageCommand");
var de_AssociatePackagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetailsList: /* @__PURE__ */ __name((_) => de_DomainPackageDetailsList(_, context), "DomainPackageDetailsList")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociatePackagesCommand");
var de_AuthorizeVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AuthorizedPrincipal: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AuthorizeVpcEndpointAccessCommand");
var de_CancelDomainConfigChangeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CancelledChangeIds: import_smithy_client._json,
    CancelledChangeProperties: import_smithy_client._json,
    DryRun: import_smithy_client.expectBoolean
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelDomainConfigChangeCommand");
var de_CancelServiceSoftwareUpdateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ServiceSoftwareOptions: /* @__PURE__ */ __name((_) => de_ServiceSoftwareOptions(_, context), "ServiceSoftwareOptions")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelServiceSoftwareUpdateCommand");
var de_CreateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    appConfigs: import_smithy_client._json,
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    dataSources: import_smithy_client._json,
    iamIdentityCenterOptions: import_smithy_client._json,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tagList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApplicationCommand");
var de_CreateDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainStatus: /* @__PURE__ */ __name((_) => de_DomainStatus(_, context), "DomainStatus")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDomainCommand");
var de_CreateOutboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ConnectionAlias: import_smithy_client.expectString,
    ConnectionId: import_smithy_client.expectString,
    ConnectionMode: import_smithy_client.expectString,
    ConnectionProperties: import_smithy_client._json,
    ConnectionStatus: import_smithy_client._json,
    LocalDomainInfo: import_smithy_client._json,
    RemoteDomainInfo: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateOutboundConnectionCommand");
var de_CreatePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    PackageDetails: /* @__PURE__ */ __name((_) => de_PackageDetails(_, context), "PackageDetails")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreatePackageCommand");
var de_CreateVpcEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VpcEndpoint: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateVpcEndpointCommand");
var de_DeleteApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApplicationCommand");
var de_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteDataSourceCommand");
var de_DeleteDirectQueryDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDirectQueryDataSourceCommand");
var de_DeleteDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainStatus: /* @__PURE__ */ __name((_) => de_DomainStatus(_, context), "DomainStatus")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteDomainCommand");
var de_DeleteInboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connection: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteInboundConnectionCommand");
var de_DeleteOutboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connection: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteOutboundConnectionCommand");
var de_DeletePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    PackageDetails: /* @__PURE__ */ __name((_) => de_PackageDetails(_, context), "PackageDetails")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeletePackageCommand");
var de_DeleteVpcEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VpcEndpointSummary: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteVpcEndpointCommand");
var de_DescribeDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainStatus: /* @__PURE__ */ __name((_) => de_DomainStatus(_, context), "DomainStatus")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainCommand");
var de_DescribeDomainAutoTunesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AutoTunes: /* @__PURE__ */ __name((_) => de_AutoTuneList(_, context), "AutoTunes"),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainAutoTunesCommand");
var de_DescribeDomainChangeProgressCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ChangeProgressStatus: /* @__PURE__ */ __name((_) => de_ChangeProgressStatusDetails(_, context), "ChangeProgressStatus")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainChangeProgressCommand");
var de_DescribeDomainConfigCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainConfig: /* @__PURE__ */ __name((_) => de_DomainConfig(_, context), "DomainConfig")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainConfigCommand");
var de_DescribeDomainHealthCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ActiveAvailabilityZoneCount: import_smithy_client.expectString,
    AvailabilityZoneCount: import_smithy_client.expectString,
    ClusterHealth: import_smithy_client.expectString,
    DataNodeCount: import_smithy_client.expectString,
    DedicatedMaster: import_smithy_client.expectBoolean,
    DomainState: import_smithy_client.expectString,
    EnvironmentInformation: import_smithy_client._json,
    MasterEligibleNodeCount: import_smithy_client.expectString,
    MasterNode: import_smithy_client.expectString,
    StandByAvailabilityZoneCount: import_smithy_client.expectString,
    TotalShards: import_smithy_client.expectString,
    TotalUnAssignedShards: import_smithy_client.expectString,
    WarmNodeCount: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainHealthCommand");
var de_DescribeDomainNodesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainNodesStatusList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainNodesCommand");
var de_DescribeDomainsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainStatusList: /* @__PURE__ */ __name((_) => de_DomainStatusList(_, context), "DomainStatusList")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDomainsCommand");
var de_DescribeDryRunProgressCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DryRunConfig: /* @__PURE__ */ __name((_) => de_DomainStatus(_, context), "DryRunConfig"),
    DryRunProgressStatus: import_smithy_client._json,
    DryRunResults: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeDryRunProgressCommand");
var de_DescribeInboundConnectionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connections: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeInboundConnectionsCommand");
var de_DescribeInstanceTypeLimitsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    LimitsByRole: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeInstanceTypeLimitsCommand");
var de_DescribeOutboundConnectionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connections: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeOutboundConnectionsCommand");
var de_DescribePackagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    PackageDetailsList: /* @__PURE__ */ __name((_) => de_PackageDetailsList(_, context), "PackageDetailsList")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribePackagesCommand");
var de_DescribeReservedInstanceOfferingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    ReservedInstanceOfferings: /* @__PURE__ */ __name((_) => de_ReservedInstanceOfferingList(_, context), "ReservedInstanceOfferings")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeReservedInstanceOfferingsCommand");
var de_DescribeReservedInstancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    ReservedInstances: /* @__PURE__ */ __name((_) => de_ReservedInstanceList(_, context), "ReservedInstances")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeReservedInstancesCommand");
var de_DescribeVpcEndpointsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VpcEndpointErrors: import_smithy_client._json,
    VpcEndpoints: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeVpcEndpointsCommand");
var de_DissociatePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetails: /* @__PURE__ */ __name((_) => de_DomainPackageDetails(_, context), "DomainPackageDetails")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DissociatePackageCommand");
var de_DissociatePackagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetailsList: /* @__PURE__ */ __name((_) => de_DomainPackageDetailsList(_, context), "DomainPackageDetailsList")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DissociatePackagesCommand");
var de_GetApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    appConfigs: import_smithy_client._json,
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    dataSources: import_smithy_client._json,
    endpoint: import_smithy_client.expectString,
    iamIdentityCenterOptions: import_smithy_client._json,
    id: import_smithy_client.expectString,
    lastUpdatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "lastUpdatedAt"),
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApplicationCommand");
var de_GetCompatibleVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CompatibleVersions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetCompatibleVersionsCommand");
var de_GetDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataSourceType: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "DataSourceType"),
    Description: import_smithy_client.expectString,
    Name: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataSourceCommand");
var de_GetDirectQueryDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataSourceArn: import_smithy_client.expectString,
    DataSourceName: import_smithy_client.expectString,
    DataSourceType: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "DataSourceType"),
    Description: import_smithy_client.expectString,
    OpenSearchArns: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDirectQueryDataSourceCommand");
var de_GetDomainMaintenanceStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Action: import_smithy_client.expectString,
    CreatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreatedAt"),
    NodeId: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StatusMessage: import_smithy_client.expectString,
    UpdatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "UpdatedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDomainMaintenanceStatusCommand");
var de_GetPackageVersionHistoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    PackageID: import_smithy_client.expectString,
    PackageVersionHistoryList: /* @__PURE__ */ __name((_) => de_PackageVersionHistoryList(_, context), "PackageVersionHistoryList")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetPackageVersionHistoryCommand");
var de_GetUpgradeHistoryCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    UpgradeHistories: /* @__PURE__ */ __name((_) => de_UpgradeHistoryList(_, context), "UpgradeHistories")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUpgradeHistoryCommand");
var de_GetUpgradeStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    StepStatus: import_smithy_client.expectString,
    UpgradeName: import_smithy_client.expectString,
    UpgradeStep: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUpgradeStatusCommand");
var de_ListApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationSummaries: /* @__PURE__ */ __name((_) => de_ApplicationSummaries(_, context), "ApplicationSummaries"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationsCommand");
var de_ListDataSourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataSources: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDataSourcesCommand");
var de_ListDirectQueryDataSourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DirectQueryDataSources: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDirectQueryDataSourcesCommand");
var de_ListDomainMaintenancesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainMaintenances: /* @__PURE__ */ __name((_) => de_DomainMaintenanceList(_, context), "DomainMaintenances"),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDomainMaintenancesCommand");
var de_ListDomainNamesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainNames: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDomainNamesCommand");
var de_ListDomainsForPackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetailsList: /* @__PURE__ */ __name((_) => de_DomainPackageDetailsList(_, context), "DomainPackageDetailsList"),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDomainsForPackageCommand");
var de_ListInstanceTypeDetailsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    InstanceTypeDetails: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListInstanceTypeDetailsCommand");
var de_ListPackagesForDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainPackageDetailsList: /* @__PURE__ */ __name((_) => de_DomainPackageDetailsList(_, context), "DomainPackageDetailsList"),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPackagesForDomainCommand");
var de_ListScheduledActionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    ScheduledActions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListScheduledActionsCommand");
var de_ListTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    TagList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsCommand");
var de_ListVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Versions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListVersionsCommand");
var de_ListVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AuthorizedPrincipalList: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListVpcEndpointAccessCommand");
var de_ListVpcEndpointsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    VpcEndpointSummaryList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListVpcEndpointsCommand");
var de_ListVpcEndpointsForDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    VpcEndpointSummaryList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListVpcEndpointsForDomainCommand");
var de_PurchaseReservedInstanceOfferingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ReservationName: import_smithy_client.expectString,
    ReservedInstanceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_PurchaseReservedInstanceOfferingCommand");
var de_RejectInboundConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Connection: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RejectInboundConnectionCommand");
var de_RemoveTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RemoveTagsCommand");
var de_RevokeVpcEndpointAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RevokeVpcEndpointAccessCommand");
var de_StartDomainMaintenanceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MaintenanceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartDomainMaintenanceCommand");
var de_StartServiceSoftwareUpdateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ServiceSoftwareOptions: /* @__PURE__ */ __name((_) => de_ServiceSoftwareOptions(_, context), "ServiceSoftwareOptions")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartServiceSoftwareUpdateCommand");
var de_UpdateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    appConfigs: import_smithy_client._json,
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    dataSources: import_smithy_client._json,
    iamIdentityCenterOptions: import_smithy_client._json,
    id: import_smithy_client.expectString,
    lastUpdatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "lastUpdatedAt"),
    name: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateApplicationCommand");
var de_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDataSourceCommand");
var de_UpdateDirectQueryDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataSourceArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDirectQueryDataSourceCommand");
var de_UpdateDomainConfigCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DomainConfig: /* @__PURE__ */ __name((_) => de_DomainConfig(_, context), "DomainConfig"),
    DryRunProgressStatus: import_smithy_client._json,
    DryRunResults: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateDomainConfigCommand");
var de_UpdatePackageCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    PackageDetails: /* @__PURE__ */ __name((_) => de_PackageDetails(_, context), "PackageDetails")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdatePackageCommand");
var de_UpdatePackageScopeCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Operation: import_smithy_client.expectString,
    PackageID: import_smithy_client.expectString,
    PackageUserList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdatePackageScopeCommand");
var de_UpdateScheduledActionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ScheduledAction: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateScheduledActionCommand");
var de_UpdateVpcEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VpcEndpoint: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateVpcEndpointCommand");
var de_UpgradeDomainCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AdvancedOptions: import_smithy_client._json,
    ChangeProgressDetails: /* @__PURE__ */ __name((_) => de_ChangeProgressDetails(_, context), "ChangeProgressDetails"),
    DomainName: import_smithy_client.expectString,
    PerformCheckOnly: import_smithy_client.expectBoolean,
    TargetVersion: import_smithy_client.expectString,
    UpgradeId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpgradeDomainCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "DisabledOperationException":
    case "com.amazonaws.opensearch#DisabledOperationException":
      throw await de_DisabledOperationExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.opensearch#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.opensearch#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "BaseException":
    case "com.amazonaws.opensearch#BaseException":
      throw await de_BaseExceptionRes(parsedOutput, context);
    case "DependencyFailureException":
    case "com.amazonaws.opensearch#DependencyFailureException":
      throw await de_DependencyFailureExceptionRes(parsedOutput, context);
    case "InternalException":
    case "com.amazonaws.opensearch#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.opensearch#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "AccessDeniedException":
    case "com.amazonaws.opensearch#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.opensearch#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InvalidTypeException":
    case "com.amazonaws.opensearch#InvalidTypeException":
      throw await de_InvalidTypeExceptionRes(parsedOutput, context);
    case "ResourceAlreadyExistsException":
    case "com.amazonaws.opensearch#ResourceAlreadyExistsException":
      throw await de_ResourceAlreadyExistsExceptionRes(parsedOutput, context);
    case "InvalidPaginationTokenException":
    case "com.amazonaws.opensearch#InvalidPaginationTokenException":
      throw await de_InvalidPaginationTokenExceptionRes(parsedOutput, context);
    case "SlotNotAvailableException":
    case "com.amazonaws.opensearch#SlotNotAvailableException":
      throw await de_SlotNotAvailableExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(OpenSearchServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_BaseExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new BaseException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BaseExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_DependencyFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new DependencyFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_DependencyFailureExceptionRes");
var de_DisabledOperationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new DisabledOperationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_DisabledOperationExceptionRes");
var de_InternalExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalExceptionRes");
var de_InvalidPaginationTokenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidPaginationTokenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidPaginationTokenExceptionRes");
var de_InvalidTypeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidTypeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidTypeExceptionRes");
var de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LimitExceededExceptionRes");
var de_ResourceAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceAlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceAlreadyExistsExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_SlotNotAvailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    SlotSuggestions: import_smithy_client._json,
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new SlotNotAvailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_SlotNotAvailableExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_AutoTuneMaintenanceSchedule = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    CronExpressionForRecurrence: [],
    Duration: import_smithy_client._json,
    StartAt: /* @__PURE__ */ __name((_) => _.getTime() / 1e3, "StartAt")
  });
}, "se_AutoTuneMaintenanceSchedule");
var se_AutoTuneMaintenanceScheduleList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_AutoTuneMaintenanceSchedule(entry, context);
  });
}, "se_AutoTuneMaintenanceScheduleList");
var se_AutoTuneOptions = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    DesiredState: [],
    MaintenanceSchedules: /* @__PURE__ */ __name((_) => se_AutoTuneMaintenanceScheduleList(_, context), "MaintenanceSchedules"),
    RollbackOnDisable: [],
    UseOffPeakWindow: []
  });
}, "se_AutoTuneOptions");
var se_AutoTuneOptionsInput = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    DesiredState: [],
    MaintenanceSchedules: /* @__PURE__ */ __name((_) => se_AutoTuneMaintenanceScheduleList(_, context), "MaintenanceSchedules"),
    UseOffPeakWindow: []
  });
}, "se_AutoTuneOptionsInput");
var de_AccessPoliciesStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client.expectString,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_AccessPoliciesStatus");
var de_AdvancedOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_AdvancedOptionsStatus");
var de_AdvancedSecurityOptions = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AnonymousAuthDisableDate: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "AnonymousAuthDisableDate"),
    AnonymousAuthEnabled: import_smithy_client.expectBoolean,
    Enabled: import_smithy_client.expectBoolean,
    IAMFederationOptions: import_smithy_client._json,
    InternalUserDatabaseEnabled: import_smithy_client.expectBoolean,
    JWTOptions: import_smithy_client._json,
    SAMLOptions: import_smithy_client._json
  });
}, "de_AdvancedSecurityOptions");
var de_AdvancedSecurityOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: /* @__PURE__ */ __name((_) => de_AdvancedSecurityOptions(_, context), "Options"),
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_AdvancedSecurityOptionsStatus");
var de_AIMLOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_AIMLOptionsStatus");
var de_ApplicationSummaries = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ApplicationSummary(entry, context);
  });
  return retVal;
}, "de_ApplicationSummaries");
var de_ApplicationSummary = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    endpoint: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    lastUpdatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "lastUpdatedAt"),
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_ApplicationSummary");
var de_AutoTune = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AutoTuneDetails: /* @__PURE__ */ __name((_) => de_AutoTuneDetails(_, context), "AutoTuneDetails"),
    AutoTuneType: import_smithy_client.expectString
  });
}, "de_AutoTune");
var de_AutoTuneDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ScheduledAutoTuneDetails: /* @__PURE__ */ __name((_) => de_ScheduledAutoTuneDetails(_, context), "ScheduledAutoTuneDetails")
  });
}, "de_AutoTuneDetails");
var de_AutoTuneList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AutoTune(entry, context);
  });
  return retVal;
}, "de_AutoTuneList");
var de_AutoTuneMaintenanceSchedule = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CronExpressionForRecurrence: import_smithy_client.expectString,
    Duration: import_smithy_client._json,
    StartAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartAt")
  });
}, "de_AutoTuneMaintenanceSchedule");
var de_AutoTuneMaintenanceScheduleList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AutoTuneMaintenanceSchedule(entry, context);
  });
  return retVal;
}, "de_AutoTuneMaintenanceScheduleList");
var de_AutoTuneOptions = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DesiredState: import_smithy_client.expectString,
    MaintenanceSchedules: /* @__PURE__ */ __name((_) => de_AutoTuneMaintenanceScheduleList(_, context), "MaintenanceSchedules"),
    RollbackOnDisable: import_smithy_client.expectString,
    UseOffPeakWindow: import_smithy_client.expectBoolean
  });
}, "de_AutoTuneOptions");
var de_AutoTuneOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: /* @__PURE__ */ __name((_) => de_AutoTuneOptions(_, context), "Options"),
    Status: /* @__PURE__ */ __name((_) => de_AutoTuneStatus(_, context), "Status")
  });
}, "de_AutoTuneOptionsStatus");
var de_AutoTuneStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationDate: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationDate"),
    ErrorMessage: import_smithy_client.expectString,
    PendingDeletion: import_smithy_client.expectBoolean,
    State: import_smithy_client.expectString,
    UpdateDate: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "UpdateDate"),
    UpdateVersion: import_smithy_client.expectInt32
  });
}, "de_AutoTuneStatus");
var de_ChangeProgressDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChangeId: import_smithy_client.expectString,
    ConfigChangeStatus: import_smithy_client.expectString,
    InitiatedBy: import_smithy_client.expectString,
    LastUpdatedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdatedTime"),
    Message: import_smithy_client.expectString,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime")
  });
}, "de_ChangeProgressDetails");
var de_ChangeProgressStage = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Description: import_smithy_client.expectString,
    LastUpdated: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdated"),
    Name: import_smithy_client.expectString,
    Status: import_smithy_client.expectString
  });
}, "de_ChangeProgressStage");
var de_ChangeProgressStageList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ChangeProgressStage(entry, context);
  });
  return retVal;
}, "de_ChangeProgressStageList");
var de_ChangeProgressStatusDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChangeId: import_smithy_client.expectString,
    ChangeProgressStages: /* @__PURE__ */ __name((_) => de_ChangeProgressStageList(_, context), "ChangeProgressStages"),
    CompletedProperties: import_smithy_client._json,
    ConfigChangeStatus: import_smithy_client.expectString,
    InitiatedBy: import_smithy_client.expectString,
    LastUpdatedTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdatedTime"),
    PendingProperties: import_smithy_client._json,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime"),
    Status: import_smithy_client.expectString,
    TotalNumberOfStages: import_smithy_client.expectInt32
  });
}, "de_ChangeProgressStatusDetails");
var de_ClusterConfigStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_ClusterConfigStatus");
var de_CognitoOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_CognitoOptionsStatus");
var de_DomainConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AIMLOptions: /* @__PURE__ */ __name((_) => de_AIMLOptionsStatus(_, context), "AIMLOptions"),
    AccessPolicies: /* @__PURE__ */ __name((_) => de_AccessPoliciesStatus(_, context), "AccessPolicies"),
    AdvancedOptions: /* @__PURE__ */ __name((_) => de_AdvancedOptionsStatus(_, context), "AdvancedOptions"),
    AdvancedSecurityOptions: /* @__PURE__ */ __name((_) => de_AdvancedSecurityOptionsStatus(_, context), "AdvancedSecurityOptions"),
    AutoTuneOptions: /* @__PURE__ */ __name((_) => de_AutoTuneOptionsStatus(_, context), "AutoTuneOptions"),
    ChangeProgressDetails: /* @__PURE__ */ __name((_) => de_ChangeProgressDetails(_, context), "ChangeProgressDetails"),
    ClusterConfig: /* @__PURE__ */ __name((_) => de_ClusterConfigStatus(_, context), "ClusterConfig"),
    CognitoOptions: /* @__PURE__ */ __name((_) => de_CognitoOptionsStatus(_, context), "CognitoOptions"),
    DomainEndpointOptions: /* @__PURE__ */ __name((_) => de_DomainEndpointOptionsStatus(_, context), "DomainEndpointOptions"),
    EBSOptions: /* @__PURE__ */ __name((_) => de_EBSOptionsStatus(_, context), "EBSOptions"),
    EncryptionAtRestOptions: /* @__PURE__ */ __name((_) => de_EncryptionAtRestOptionsStatus(_, context), "EncryptionAtRestOptions"),
    EngineVersion: /* @__PURE__ */ __name((_) => de_VersionStatus(_, context), "EngineVersion"),
    IPAddressType: /* @__PURE__ */ __name((_) => de_IPAddressTypeStatus(_, context), "IPAddressType"),
    IdentityCenterOptions: /* @__PURE__ */ __name((_) => de_IdentityCenterOptionsStatus(_, context), "IdentityCenterOptions"),
    LogPublishingOptions: /* @__PURE__ */ __name((_) => de_LogPublishingOptionsStatus(_, context), "LogPublishingOptions"),
    ModifyingProperties: import_smithy_client._json,
    NodeToNodeEncryptionOptions: /* @__PURE__ */ __name((_) => de_NodeToNodeEncryptionOptionsStatus(_, context), "NodeToNodeEncryptionOptions"),
    OffPeakWindowOptions: /* @__PURE__ */ __name((_) => de_OffPeakWindowOptionsStatus(_, context), "OffPeakWindowOptions"),
    SnapshotOptions: /* @__PURE__ */ __name((_) => de_SnapshotOptionsStatus(_, context), "SnapshotOptions"),
    SoftwareUpdateOptions: /* @__PURE__ */ __name((_) => de_SoftwareUpdateOptionsStatus(_, context), "SoftwareUpdateOptions"),
    VPCOptions: /* @__PURE__ */ __name((_) => de_VPCDerivedInfoStatus(_, context), "VPCOptions")
  });
}, "de_DomainConfig");
var de_DomainEndpointOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_DomainEndpointOptionsStatus");
var de_DomainMaintenanceDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Action: import_smithy_client.expectString,
    CreatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreatedAt"),
    DomainName: import_smithy_client.expectString,
    MaintenanceId: import_smithy_client.expectString,
    NodeId: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    StatusMessage: import_smithy_client.expectString,
    UpdatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "UpdatedAt")
  });
}, "de_DomainMaintenanceDetails");
var de_DomainMaintenanceList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DomainMaintenanceDetails(entry, context);
  });
  return retVal;
}, "de_DomainMaintenanceList");
var de_DomainPackageDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AssociationConfiguration: import_smithy_client._json,
    DomainName: import_smithy_client.expectString,
    DomainPackageStatus: import_smithy_client.expectString,
    ErrorDetails: import_smithy_client._json,
    LastUpdated: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdated"),
    PackageID: import_smithy_client.expectString,
    PackageName: import_smithy_client.expectString,
    PackageType: import_smithy_client.expectString,
    PackageVersion: import_smithy_client.expectString,
    PrerequisitePackageIDList: import_smithy_client._json,
    ReferencePath: import_smithy_client.expectString
  });
}, "de_DomainPackageDetails");
var de_DomainPackageDetailsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DomainPackageDetails(entry, context);
  });
  return retVal;
}, "de_DomainPackageDetailsList");
var de_DomainStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AIMLOptions: import_smithy_client._json,
    ARN: import_smithy_client.expectString,
    AccessPolicies: import_smithy_client.expectString,
    AdvancedOptions: import_smithy_client._json,
    AdvancedSecurityOptions: /* @__PURE__ */ __name((_) => de_AdvancedSecurityOptions(_, context), "AdvancedSecurityOptions"),
    AutoTuneOptions: import_smithy_client._json,
    ChangeProgressDetails: /* @__PURE__ */ __name((_) => de_ChangeProgressDetails(_, context), "ChangeProgressDetails"),
    ClusterConfig: import_smithy_client._json,
    CognitoOptions: import_smithy_client._json,
    Created: import_smithy_client.expectBoolean,
    Deleted: import_smithy_client.expectBoolean,
    DomainEndpointOptions: import_smithy_client._json,
    DomainEndpointV2HostedZoneId: import_smithy_client.expectString,
    DomainId: import_smithy_client.expectString,
    DomainName: import_smithy_client.expectString,
    DomainProcessingStatus: import_smithy_client.expectString,
    EBSOptions: import_smithy_client._json,
    EncryptionAtRestOptions: import_smithy_client._json,
    Endpoint: import_smithy_client.expectString,
    EndpointV2: import_smithy_client.expectString,
    Endpoints: import_smithy_client._json,
    EngineVersion: import_smithy_client.expectString,
    IPAddressType: import_smithy_client.expectString,
    IdentityCenterOptions: import_smithy_client._json,
    LogPublishingOptions: import_smithy_client._json,
    ModifyingProperties: import_smithy_client._json,
    NodeToNodeEncryptionOptions: import_smithy_client._json,
    OffPeakWindowOptions: import_smithy_client._json,
    Processing: import_smithy_client.expectBoolean,
    ServiceSoftwareOptions: /* @__PURE__ */ __name((_) => de_ServiceSoftwareOptions(_, context), "ServiceSoftwareOptions"),
    SnapshotOptions: import_smithy_client._json,
    SoftwareUpdateOptions: import_smithy_client._json,
    UpgradeProcessing: import_smithy_client.expectBoolean,
    VPCOptions: import_smithy_client._json
  });
}, "de_DomainStatus");
var de_DomainStatusList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DomainStatus(entry, context);
  });
  return retVal;
}, "de_DomainStatusList");
var de_EBSOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_EBSOptionsStatus");
var de_EncryptionAtRestOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_EncryptionAtRestOptionsStatus");
var de_IdentityCenterOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_IdentityCenterOptionsStatus");
var de_IPAddressTypeStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client.expectString,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_IPAddressTypeStatus");
var de_LogPublishingOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_LogPublishingOptionsStatus");
var de_NodeToNodeEncryptionOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_NodeToNodeEncryptionOptionsStatus");
var de_OffPeakWindowOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_OffPeakWindowOptionsStatus");
var de_OptionStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreationDate: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreationDate"),
    PendingDeletion: import_smithy_client.expectBoolean,
    State: import_smithy_client.expectString,
    UpdateDate: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "UpdateDate"),
    UpdateVersion: import_smithy_client.expectInt32
  });
}, "de_OptionStatus");
var de_PackageDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AllowListedUserList: import_smithy_client._json,
    AvailablePackageConfiguration: import_smithy_client._json,
    AvailablePackageVersion: import_smithy_client.expectString,
    AvailablePluginProperties: import_smithy_client._json,
    CreatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreatedAt"),
    EngineVersion: import_smithy_client.expectString,
    ErrorDetails: import_smithy_client._json,
    LastUpdatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdatedAt"),
    PackageDescription: import_smithy_client.expectString,
    PackageEncryptionOptions: import_smithy_client._json,
    PackageID: import_smithy_client.expectString,
    PackageName: import_smithy_client.expectString,
    PackageOwner: import_smithy_client.expectString,
    PackageStatus: import_smithy_client.expectString,
    PackageType: import_smithy_client.expectString,
    PackageVendingOptions: import_smithy_client._json
  });
}, "de_PackageDetails");
var de_PackageDetailsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PackageDetails(entry, context);
  });
  return retVal;
}, "de_PackageDetailsList");
var de_PackageVersionHistory = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CommitMessage: import_smithy_client.expectString,
    CreatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "CreatedAt"),
    PackageConfiguration: import_smithy_client._json,
    PackageVersion: import_smithy_client.expectString,
    PluginProperties: import_smithy_client._json
  });
}, "de_PackageVersionHistory");
var de_PackageVersionHistoryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PackageVersionHistory(entry, context);
  });
  return retVal;
}, "de_PackageVersionHistoryList");
var de_RecurringCharge = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    RecurringChargeAmount: import_smithy_client.limitedParseDouble,
    RecurringChargeFrequency: import_smithy_client.expectString
  });
}, "de_RecurringCharge");
var de_RecurringChargeList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RecurringCharge(entry, context);
  });
  return retVal;
}, "de_RecurringChargeList");
var de_ReservedInstance = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    BillingSubscriptionId: import_smithy_client.expectLong,
    CurrencyCode: import_smithy_client.expectString,
    Duration: import_smithy_client.expectInt32,
    FixedPrice: import_smithy_client.limitedParseDouble,
    InstanceCount: import_smithy_client.expectInt32,
    InstanceType: import_smithy_client.expectString,
    PaymentOption: import_smithy_client.expectString,
    RecurringCharges: /* @__PURE__ */ __name((_) => de_RecurringChargeList(_, context), "RecurringCharges"),
    ReservationName: import_smithy_client.expectString,
    ReservedInstanceId: import_smithy_client.expectString,
    ReservedInstanceOfferingId: import_smithy_client.expectString,
    StartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTime"),
    State: import_smithy_client.expectString,
    UsagePrice: import_smithy_client.limitedParseDouble
  });
}, "de_ReservedInstance");
var de_ReservedInstanceList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedInstance(entry, context);
  });
  return retVal;
}, "de_ReservedInstanceList");
var de_ReservedInstanceOffering = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CurrencyCode: import_smithy_client.expectString,
    Duration: import_smithy_client.expectInt32,
    FixedPrice: import_smithy_client.limitedParseDouble,
    InstanceType: import_smithy_client.expectString,
    PaymentOption: import_smithy_client.expectString,
    RecurringCharges: /* @__PURE__ */ __name((_) => de_RecurringChargeList(_, context), "RecurringCharges"),
    ReservedInstanceOfferingId: import_smithy_client.expectString,
    UsagePrice: import_smithy_client.limitedParseDouble
  });
}, "de_ReservedInstanceOffering");
var de_ReservedInstanceOfferingList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ReservedInstanceOffering(entry, context);
  });
  return retVal;
}, "de_ReservedInstanceOfferingList");
var de_ScheduledAutoTuneDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Action: import_smithy_client.expectString,
    ActionType: import_smithy_client.expectString,
    Date: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "Date"),
    Severity: import_smithy_client.expectString
  });
}, "de_ScheduledAutoTuneDetails");
var de_ServiceSoftwareOptions = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AutomatedUpdateDate: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "AutomatedUpdateDate"),
    Cancellable: import_smithy_client.expectBoolean,
    CurrentVersion: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    NewVersion: import_smithy_client.expectString,
    OptionalDeployment: import_smithy_client.expectBoolean,
    UpdateAvailable: import_smithy_client.expectBoolean,
    UpdateStatus: import_smithy_client.expectString
  });
}, "de_ServiceSoftwareOptions");
var de_SnapshotOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_SnapshotOptionsStatus");
var de_SoftwareUpdateOptionsStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_SoftwareUpdateOptionsStatus");
var de_UpgradeHistory = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    StartTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTimestamp"),
    StepsList: /* @__PURE__ */ __name((_) => de_UpgradeStepsList(_, context), "StepsList"),
    UpgradeName: import_smithy_client.expectString,
    UpgradeStatus: import_smithy_client.expectString
  });
}, "de_UpgradeHistory");
var de_UpgradeHistoryList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_UpgradeHistory(entry, context);
  });
  return retVal;
}, "de_UpgradeHistoryList");
var de_UpgradeStepItem = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Issues: import_smithy_client._json,
    ProgressPercent: import_smithy_client.limitedParseDouble,
    UpgradeStep: import_smithy_client.expectString,
    UpgradeStepStatus: import_smithy_client.expectString
  });
}, "de_UpgradeStepItem");
var de_UpgradeStepsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_UpgradeStepItem(entry, context);
  });
  return retVal;
}, "de_UpgradeStepsList");
var de_VersionStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client.expectString,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_VersionStatus");
var de_VPCDerivedInfoStatus = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Options: import_smithy_client._json,
    Status: /* @__PURE__ */ __name((_) => de_OptionStatus(_, context), "Status")
  });
}, "de_VPCDerivedInfoStatus");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _A = "Action";
var _ARN = "ARN";
var _CI = "ChangeId";
var _DN = "DomainName";
var _DRI = "DryRunId";
var _ET = "EngineType";
var _IT = "InstanceType";
var _LDRC = "LoadDryRunConfig";
var _MI = "MaintenanceId";
var _MR = "MaxResults";
var _NT = "NextToken";
var _RAZ = "RetrieveAZs";
var _RII = "ReservedInstanceId";
var _RIOI = "ReservedInstanceOfferingId";
var _S = "Status";
var _a = "action";
var _ar = "arn";
var _c = "changeid";
var _dN = "domainName";
var _dRI = "dryRunId";
var _eT = "engineType";
var _iT = "instanceType";
var _lDRC = "loadDryRunConfig";
var _mI = "maintenanceId";
var _mR = "maxResults";
var _n = "nexttoken";
var _nT = "nextToken";
var _oI = "offeringId";
var _rAZ = "retrieveAZs";
var _rI = "reservationId";
var _s = "statuses";
var _st = "status";

// src/commands/AcceptInboundConnectionCommand.ts
var AcceptInboundConnectionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AcceptInboundConnection", {}).n("OpenSearchClient", "AcceptInboundConnectionCommand").f(void 0, void 0).ser(se_AcceptInboundConnectionCommand).de(de_AcceptInboundConnectionCommand).build() {
  static {
    __name(this, "AcceptInboundConnectionCommand");
  }
};

// src/commands/AddDataSourceCommand.ts



var AddDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AddDataSource", {}).n("OpenSearchClient", "AddDataSourceCommand").f(void 0, void 0).ser(se_AddDataSourceCommand).de(de_AddDataSourceCommand).build() {
  static {
    __name(this, "AddDataSourceCommand");
  }
};

// src/commands/AddDirectQueryDataSourceCommand.ts



var AddDirectQueryDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AddDirectQueryDataSource", {}).n("OpenSearchClient", "AddDirectQueryDataSourceCommand").f(void 0, void 0).ser(se_AddDirectQueryDataSourceCommand).de(de_AddDirectQueryDataSourceCommand).build() {
  static {
    __name(this, "AddDirectQueryDataSourceCommand");
  }
};

// src/commands/AddTagsCommand.ts



var AddTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AddTags", {}).n("OpenSearchClient", "AddTagsCommand").f(void 0, void 0).ser(se_AddTagsCommand).de(de_AddTagsCommand).build() {
  static {
    __name(this, "AddTagsCommand");
  }
};

// src/commands/AssociatePackageCommand.ts



var AssociatePackageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AssociatePackage", {}).n("OpenSearchClient", "AssociatePackageCommand").f(void 0, void 0).ser(se_AssociatePackageCommand).de(de_AssociatePackageCommand).build() {
  static {
    __name(this, "AssociatePackageCommand");
  }
};

// src/commands/AssociatePackagesCommand.ts



var AssociatePackagesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AssociatePackages", {}).n("OpenSearchClient", "AssociatePackagesCommand").f(void 0, void 0).ser(se_AssociatePackagesCommand).de(de_AssociatePackagesCommand).build() {
  static {
    __name(this, "AssociatePackagesCommand");
  }
};

// src/commands/AuthorizeVpcEndpointAccessCommand.ts



var AuthorizeVpcEndpointAccessCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "AuthorizeVpcEndpointAccess", {}).n("OpenSearchClient", "AuthorizeVpcEndpointAccessCommand").f(void 0, void 0).ser(se_AuthorizeVpcEndpointAccessCommand).de(de_AuthorizeVpcEndpointAccessCommand).build() {
  static {
    __name(this, "AuthorizeVpcEndpointAccessCommand");
  }
};

// src/commands/CancelDomainConfigChangeCommand.ts



var CancelDomainConfigChangeCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CancelDomainConfigChange", {}).n("OpenSearchClient", "CancelDomainConfigChangeCommand").f(void 0, void 0).ser(se_CancelDomainConfigChangeCommand).de(de_CancelDomainConfigChangeCommand).build() {
  static {
    __name(this, "CancelDomainConfigChangeCommand");
  }
};

// src/commands/CancelServiceSoftwareUpdateCommand.ts



var CancelServiceSoftwareUpdateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CancelServiceSoftwareUpdate", {}).n("OpenSearchClient", "CancelServiceSoftwareUpdateCommand").f(void 0, void 0).ser(se_CancelServiceSoftwareUpdateCommand).de(de_CancelServiceSoftwareUpdateCommand).build() {
  static {
    __name(this, "CancelServiceSoftwareUpdateCommand");
  }
};

// src/commands/CreateApplicationCommand.ts



var CreateApplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CreateApplication", {}).n("OpenSearchClient", "CreateApplicationCommand").f(void 0, void 0).ser(se_CreateApplicationCommand).de(de_CreateApplicationCommand).build() {
  static {
    __name(this, "CreateApplicationCommand");
  }
};

// src/commands/CreateDomainCommand.ts



var CreateDomainCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CreateDomain", {}).n("OpenSearchClient", "CreateDomainCommand").f(CreateDomainRequestFilterSensitiveLog, void 0).ser(se_CreateDomainCommand).de(de_CreateDomainCommand).build() {
  static {
    __name(this, "CreateDomainCommand");
  }
};

// src/commands/CreateOutboundConnectionCommand.ts



var CreateOutboundConnectionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CreateOutboundConnection", {}).n("OpenSearchClient", "CreateOutboundConnectionCommand").f(void 0, void 0).ser(se_CreateOutboundConnectionCommand).de(de_CreateOutboundConnectionCommand).build() {
  static {
    __name(this, "CreateOutboundConnectionCommand");
  }
};

// src/commands/CreatePackageCommand.ts



var CreatePackageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CreatePackage", {}).n("OpenSearchClient", "CreatePackageCommand").f(void 0, void 0).ser(se_CreatePackageCommand).de(de_CreatePackageCommand).build() {
  static {
    __name(this, "CreatePackageCommand");
  }
};

// src/commands/CreateVpcEndpointCommand.ts



var CreateVpcEndpointCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "CreateVpcEndpoint", {}).n("OpenSearchClient", "CreateVpcEndpointCommand").f(void 0, void 0).ser(se_CreateVpcEndpointCommand).de(de_CreateVpcEndpointCommand).build() {
  static {
    __name(this, "CreateVpcEndpointCommand");
  }
};

// src/commands/DeleteApplicationCommand.ts



var DeleteApplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteApplication", {}).n("OpenSearchClient", "DeleteApplicationCommand").f(void 0, void 0).ser(se_DeleteApplicationCommand).de(de_DeleteApplicationCommand).build() {
  static {
    __name(this, "DeleteApplicationCommand");
  }
};

// src/commands/DeleteDataSourceCommand.ts



var DeleteDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteDataSource", {}).n("OpenSearchClient", "DeleteDataSourceCommand").f(void 0, void 0).ser(se_DeleteDataSourceCommand).de(de_DeleteDataSourceCommand).build() {
  static {
    __name(this, "DeleteDataSourceCommand");
  }
};

// src/commands/DeleteDirectQueryDataSourceCommand.ts



var DeleteDirectQueryDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteDirectQueryDataSource", {}).n("OpenSearchClient", "DeleteDirectQueryDataSourceCommand").f(void 0, void 0).ser(se_DeleteDirectQueryDataSourceCommand).de(de_DeleteDirectQueryDataSourceCommand).build() {
  static {
    __name(this, "DeleteDirectQueryDataSourceCommand");
  }
};

// src/commands/DeleteDomainCommand.ts



var DeleteDomainCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteDomain", {}).n("OpenSearchClient", "DeleteDomainCommand").f(void 0, void 0).ser(se_DeleteDomainCommand).de(de_DeleteDomainCommand).build() {
  static {
    __name(this, "DeleteDomainCommand");
  }
};

// src/commands/DeleteInboundConnectionCommand.ts



var DeleteInboundConnectionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteInboundConnection", {}).n("OpenSearchClient", "DeleteInboundConnectionCommand").f(void 0, void 0).ser(se_DeleteInboundConnectionCommand).de(de_DeleteInboundConnectionCommand).build() {
  static {
    __name(this, "DeleteInboundConnectionCommand");
  }
};

// src/commands/DeleteOutboundConnectionCommand.ts



var DeleteOutboundConnectionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteOutboundConnection", {}).n("OpenSearchClient", "DeleteOutboundConnectionCommand").f(void 0, void 0).ser(se_DeleteOutboundConnectionCommand).de(de_DeleteOutboundConnectionCommand).build() {
  static {
    __name(this, "DeleteOutboundConnectionCommand");
  }
};

// src/commands/DeletePackageCommand.ts



var DeletePackageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeletePackage", {}).n("OpenSearchClient", "DeletePackageCommand").f(void 0, void 0).ser(se_DeletePackageCommand).de(de_DeletePackageCommand).build() {
  static {
    __name(this, "DeletePackageCommand");
  }
};

// src/commands/DeleteVpcEndpointCommand.ts



var DeleteVpcEndpointCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DeleteVpcEndpoint", {}).n("OpenSearchClient", "DeleteVpcEndpointCommand").f(void 0, void 0).ser(se_DeleteVpcEndpointCommand).de(de_DeleteVpcEndpointCommand).build() {
  static {
    __name(this, "DeleteVpcEndpointCommand");
  }
};

// src/commands/DescribeDomainAutoTunesCommand.ts



var DescribeDomainAutoTunesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainAutoTunes", {}).n("OpenSearchClient", "DescribeDomainAutoTunesCommand").f(void 0, void 0).ser(se_DescribeDomainAutoTunesCommand).de(de_DescribeDomainAutoTunesCommand).build() {
  static {
    __name(this, "DescribeDomainAutoTunesCommand");
  }
};

// src/commands/DescribeDomainChangeProgressCommand.ts



var DescribeDomainChangeProgressCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainChangeProgress", {}).n("OpenSearchClient", "DescribeDomainChangeProgressCommand").f(void 0, void 0).ser(se_DescribeDomainChangeProgressCommand).de(de_DescribeDomainChangeProgressCommand).build() {
  static {
    __name(this, "DescribeDomainChangeProgressCommand");
  }
};

// src/commands/DescribeDomainCommand.ts



var DescribeDomainCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomain", {}).n("OpenSearchClient", "DescribeDomainCommand").f(void 0, void 0).ser(se_DescribeDomainCommand).de(de_DescribeDomainCommand).build() {
  static {
    __name(this, "DescribeDomainCommand");
  }
};

// src/commands/DescribeDomainConfigCommand.ts



var DescribeDomainConfigCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainConfig", {}).n("OpenSearchClient", "DescribeDomainConfigCommand").f(void 0, void 0).ser(se_DescribeDomainConfigCommand).de(de_DescribeDomainConfigCommand).build() {
  static {
    __name(this, "DescribeDomainConfigCommand");
  }
};

// src/commands/DescribeDomainHealthCommand.ts



var DescribeDomainHealthCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainHealth", {}).n("OpenSearchClient", "DescribeDomainHealthCommand").f(void 0, void 0).ser(se_DescribeDomainHealthCommand).de(de_DescribeDomainHealthCommand).build() {
  static {
    __name(this, "DescribeDomainHealthCommand");
  }
};

// src/commands/DescribeDomainNodesCommand.ts



var DescribeDomainNodesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomainNodes", {}).n("OpenSearchClient", "DescribeDomainNodesCommand").f(void 0, void 0).ser(se_DescribeDomainNodesCommand).de(de_DescribeDomainNodesCommand).build() {
  static {
    __name(this, "DescribeDomainNodesCommand");
  }
};

// src/commands/DescribeDomainsCommand.ts



var DescribeDomainsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDomains", {}).n("OpenSearchClient", "DescribeDomainsCommand").f(void 0, void 0).ser(se_DescribeDomainsCommand).de(de_DescribeDomainsCommand).build() {
  static {
    __name(this, "DescribeDomainsCommand");
  }
};

// src/commands/DescribeDryRunProgressCommand.ts



var DescribeDryRunProgressCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeDryRunProgress", {}).n("OpenSearchClient", "DescribeDryRunProgressCommand").f(void 0, void 0).ser(se_DescribeDryRunProgressCommand).de(de_DescribeDryRunProgressCommand).build() {
  static {
    __name(this, "DescribeDryRunProgressCommand");
  }
};

// src/commands/DescribeInboundConnectionsCommand.ts



var DescribeInboundConnectionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeInboundConnections", {}).n("OpenSearchClient", "DescribeInboundConnectionsCommand").f(void 0, void 0).ser(se_DescribeInboundConnectionsCommand).de(de_DescribeInboundConnectionsCommand).build() {
  static {
    __name(this, "DescribeInboundConnectionsCommand");
  }
};

// src/commands/DescribeInstanceTypeLimitsCommand.ts



var DescribeInstanceTypeLimitsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeInstanceTypeLimits", {}).n("OpenSearchClient", "DescribeInstanceTypeLimitsCommand").f(void 0, void 0).ser(se_DescribeInstanceTypeLimitsCommand).de(de_DescribeInstanceTypeLimitsCommand).build() {
  static {
    __name(this, "DescribeInstanceTypeLimitsCommand");
  }
};

// src/commands/DescribeOutboundConnectionsCommand.ts



var DescribeOutboundConnectionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeOutboundConnections", {}).n("OpenSearchClient", "DescribeOutboundConnectionsCommand").f(void 0, void 0).ser(se_DescribeOutboundConnectionsCommand).de(de_DescribeOutboundConnectionsCommand).build() {
  static {
    __name(this, "DescribeOutboundConnectionsCommand");
  }
};

// src/commands/DescribePackagesCommand.ts



var DescribePackagesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribePackages", {}).n("OpenSearchClient", "DescribePackagesCommand").f(void 0, void 0).ser(se_DescribePackagesCommand).de(de_DescribePackagesCommand).build() {
  static {
    __name(this, "DescribePackagesCommand");
  }
};

// src/commands/DescribeReservedInstanceOfferingsCommand.ts



var DescribeReservedInstanceOfferingsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeReservedInstanceOfferings", {}).n("OpenSearchClient", "DescribeReservedInstanceOfferingsCommand").f(void 0, void 0).ser(se_DescribeReservedInstanceOfferingsCommand).de(de_DescribeReservedInstanceOfferingsCommand).build() {
  static {
    __name(this, "DescribeReservedInstanceOfferingsCommand");
  }
};

// src/commands/DescribeReservedInstancesCommand.ts



var DescribeReservedInstancesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeReservedInstances", {}).n("OpenSearchClient", "DescribeReservedInstancesCommand").f(void 0, void 0).ser(se_DescribeReservedInstancesCommand).de(de_DescribeReservedInstancesCommand).build() {
  static {
    __name(this, "DescribeReservedInstancesCommand");
  }
};

// src/commands/DescribeVpcEndpointsCommand.ts



var DescribeVpcEndpointsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DescribeVpcEndpoints", {}).n("OpenSearchClient", "DescribeVpcEndpointsCommand").f(void 0, void 0).ser(se_DescribeVpcEndpointsCommand).de(de_DescribeVpcEndpointsCommand).build() {
  static {
    __name(this, "DescribeVpcEndpointsCommand");
  }
};

// src/commands/DissociatePackageCommand.ts



var DissociatePackageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DissociatePackage", {}).n("OpenSearchClient", "DissociatePackageCommand").f(void 0, void 0).ser(se_DissociatePackageCommand).de(de_DissociatePackageCommand).build() {
  static {
    __name(this, "DissociatePackageCommand");
  }
};

// src/commands/DissociatePackagesCommand.ts



var DissociatePackagesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "DissociatePackages", {}).n("OpenSearchClient", "DissociatePackagesCommand").f(void 0, void 0).ser(se_DissociatePackagesCommand).de(de_DissociatePackagesCommand).build() {
  static {
    __name(this, "DissociatePackagesCommand");
  }
};

// src/commands/GetApplicationCommand.ts



var GetApplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetApplication", {}).n("OpenSearchClient", "GetApplicationCommand").f(void 0, void 0).ser(se_GetApplicationCommand).de(de_GetApplicationCommand).build() {
  static {
    __name(this, "GetApplicationCommand");
  }
};

// src/commands/GetCompatibleVersionsCommand.ts



var GetCompatibleVersionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetCompatibleVersions", {}).n("OpenSearchClient", "GetCompatibleVersionsCommand").f(void 0, void 0).ser(se_GetCompatibleVersionsCommand).de(de_GetCompatibleVersionsCommand).build() {
  static {
    __name(this, "GetCompatibleVersionsCommand");
  }
};

// src/commands/GetDataSourceCommand.ts



var GetDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetDataSource", {}).n("OpenSearchClient", "GetDataSourceCommand").f(void 0, void 0).ser(se_GetDataSourceCommand).de(de_GetDataSourceCommand).build() {
  static {
    __name(this, "GetDataSourceCommand");
  }
};

// src/commands/GetDirectQueryDataSourceCommand.ts



var GetDirectQueryDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetDirectQueryDataSource", {}).n("OpenSearchClient", "GetDirectQueryDataSourceCommand").f(void 0, void 0).ser(se_GetDirectQueryDataSourceCommand).de(de_GetDirectQueryDataSourceCommand).build() {
  static {
    __name(this, "GetDirectQueryDataSourceCommand");
  }
};

// src/commands/GetDomainMaintenanceStatusCommand.ts



var GetDomainMaintenanceStatusCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetDomainMaintenanceStatus", {}).n("OpenSearchClient", "GetDomainMaintenanceStatusCommand").f(void 0, void 0).ser(se_GetDomainMaintenanceStatusCommand).de(de_GetDomainMaintenanceStatusCommand).build() {
  static {
    __name(this, "GetDomainMaintenanceStatusCommand");
  }
};

// src/commands/GetPackageVersionHistoryCommand.ts



var GetPackageVersionHistoryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetPackageVersionHistory", {}).n("OpenSearchClient", "GetPackageVersionHistoryCommand").f(void 0, void 0).ser(se_GetPackageVersionHistoryCommand).de(de_GetPackageVersionHistoryCommand).build() {
  static {
    __name(this, "GetPackageVersionHistoryCommand");
  }
};

// src/commands/GetUpgradeHistoryCommand.ts



var GetUpgradeHistoryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetUpgradeHistory", {}).n("OpenSearchClient", "GetUpgradeHistoryCommand").f(void 0, void 0).ser(se_GetUpgradeHistoryCommand).de(de_GetUpgradeHistoryCommand).build() {
  static {
    __name(this, "GetUpgradeHistoryCommand");
  }
};

// src/commands/GetUpgradeStatusCommand.ts



var GetUpgradeStatusCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "GetUpgradeStatus", {}).n("OpenSearchClient", "GetUpgradeStatusCommand").f(void 0, void 0).ser(se_GetUpgradeStatusCommand).de(de_GetUpgradeStatusCommand).build() {
  static {
    __name(this, "GetUpgradeStatusCommand");
  }
};

// src/commands/ListApplicationsCommand.ts



var ListApplicationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListApplications", {}).n("OpenSearchClient", "ListApplicationsCommand").f(void 0, void 0).ser(se_ListApplicationsCommand).de(de_ListApplicationsCommand).build() {
  static {
    __name(this, "ListApplicationsCommand");
  }
};

// src/commands/ListDataSourcesCommand.ts



var ListDataSourcesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListDataSources", {}).n("OpenSearchClient", "ListDataSourcesCommand").f(void 0, void 0).ser(se_ListDataSourcesCommand).de(de_ListDataSourcesCommand).build() {
  static {
    __name(this, "ListDataSourcesCommand");
  }
};

// src/commands/ListDirectQueryDataSourcesCommand.ts



var ListDirectQueryDataSourcesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListDirectQueryDataSources", {}).n("OpenSearchClient", "ListDirectQueryDataSourcesCommand").f(void 0, void 0).ser(se_ListDirectQueryDataSourcesCommand).de(de_ListDirectQueryDataSourcesCommand).build() {
  static {
    __name(this, "ListDirectQueryDataSourcesCommand");
  }
};

// src/commands/ListDomainMaintenancesCommand.ts



var ListDomainMaintenancesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListDomainMaintenances", {}).n("OpenSearchClient", "ListDomainMaintenancesCommand").f(void 0, void 0).ser(se_ListDomainMaintenancesCommand).de(de_ListDomainMaintenancesCommand).build() {
  static {
    __name(this, "ListDomainMaintenancesCommand");
  }
};

// src/commands/ListDomainNamesCommand.ts



var ListDomainNamesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListDomainNames", {}).n("OpenSearchClient", "ListDomainNamesCommand").f(void 0, void 0).ser(se_ListDomainNamesCommand).de(de_ListDomainNamesCommand).build() {
  static {
    __name(this, "ListDomainNamesCommand");
  }
};

// src/commands/ListDomainsForPackageCommand.ts



var ListDomainsForPackageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListDomainsForPackage", {}).n("OpenSearchClient", "ListDomainsForPackageCommand").f(void 0, void 0).ser(se_ListDomainsForPackageCommand).de(de_ListDomainsForPackageCommand).build() {
  static {
    __name(this, "ListDomainsForPackageCommand");
  }
};

// src/commands/ListInstanceTypeDetailsCommand.ts



var ListInstanceTypeDetailsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListInstanceTypeDetails", {}).n("OpenSearchClient", "ListInstanceTypeDetailsCommand").f(void 0, void 0).ser(se_ListInstanceTypeDetailsCommand).de(de_ListInstanceTypeDetailsCommand).build() {
  static {
    __name(this, "ListInstanceTypeDetailsCommand");
  }
};

// src/commands/ListPackagesForDomainCommand.ts



var ListPackagesForDomainCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListPackagesForDomain", {}).n("OpenSearchClient", "ListPackagesForDomainCommand").f(void 0, void 0).ser(se_ListPackagesForDomainCommand).de(de_ListPackagesForDomainCommand).build() {
  static {
    __name(this, "ListPackagesForDomainCommand");
  }
};

// src/commands/ListScheduledActionsCommand.ts



var ListScheduledActionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListScheduledActions", {}).n("OpenSearchClient", "ListScheduledActionsCommand").f(void 0, void 0).ser(se_ListScheduledActionsCommand).de(de_ListScheduledActionsCommand).build() {
  static {
    __name(this, "ListScheduledActionsCommand");
  }
};

// src/commands/ListTagsCommand.ts



var ListTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListTags", {}).n("OpenSearchClient", "ListTagsCommand").f(void 0, void 0).ser(se_ListTagsCommand).de(de_ListTagsCommand).build() {
  static {
    __name(this, "ListTagsCommand");
  }
};

// src/commands/ListVersionsCommand.ts



var ListVersionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListVersions", {}).n("OpenSearchClient", "ListVersionsCommand").f(void 0, void 0).ser(se_ListVersionsCommand).de(de_ListVersionsCommand).build() {
  static {
    __name(this, "ListVersionsCommand");
  }
};

// src/commands/ListVpcEndpointAccessCommand.ts



var ListVpcEndpointAccessCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListVpcEndpointAccess", {}).n("OpenSearchClient", "ListVpcEndpointAccessCommand").f(void 0, void 0).ser(se_ListVpcEndpointAccessCommand).de(de_ListVpcEndpointAccessCommand).build() {
  static {
    __name(this, "ListVpcEndpointAccessCommand");
  }
};

// src/commands/ListVpcEndpointsCommand.ts



var ListVpcEndpointsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListVpcEndpoints", {}).n("OpenSearchClient", "ListVpcEndpointsCommand").f(void 0, void 0).ser(se_ListVpcEndpointsCommand).de(de_ListVpcEndpointsCommand).build() {
  static {
    __name(this, "ListVpcEndpointsCommand");
  }
};

// src/commands/ListVpcEndpointsForDomainCommand.ts



var ListVpcEndpointsForDomainCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "ListVpcEndpointsForDomain", {}).n("OpenSearchClient", "ListVpcEndpointsForDomainCommand").f(void 0, void 0).ser(se_ListVpcEndpointsForDomainCommand).de(de_ListVpcEndpointsForDomainCommand).build() {
  static {
    __name(this, "ListVpcEndpointsForDomainCommand");
  }
};

// src/commands/PurchaseReservedInstanceOfferingCommand.ts



var PurchaseReservedInstanceOfferingCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "PurchaseReservedInstanceOffering", {}).n("OpenSearchClient", "PurchaseReservedInstanceOfferingCommand").f(void 0, void 0).ser(se_PurchaseReservedInstanceOfferingCommand).de(de_PurchaseReservedInstanceOfferingCommand).build() {
  static {
    __name(this, "PurchaseReservedInstanceOfferingCommand");
  }
};

// src/commands/RejectInboundConnectionCommand.ts



var RejectInboundConnectionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "RejectInboundConnection", {}).n("OpenSearchClient", "RejectInboundConnectionCommand").f(void 0, void 0).ser(se_RejectInboundConnectionCommand).de(de_RejectInboundConnectionCommand).build() {
  static {
    __name(this, "RejectInboundConnectionCommand");
  }
};

// src/commands/RemoveTagsCommand.ts



var RemoveTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "RemoveTags", {}).n("OpenSearchClient", "RemoveTagsCommand").f(void 0, void 0).ser(se_RemoveTagsCommand).de(de_RemoveTagsCommand).build() {
  static {
    __name(this, "RemoveTagsCommand");
  }
};

// src/commands/RevokeVpcEndpointAccessCommand.ts



var RevokeVpcEndpointAccessCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "RevokeVpcEndpointAccess", {}).n("OpenSearchClient", "RevokeVpcEndpointAccessCommand").f(void 0, void 0).ser(se_RevokeVpcEndpointAccessCommand).de(de_RevokeVpcEndpointAccessCommand).build() {
  static {
    __name(this, "RevokeVpcEndpointAccessCommand");
  }
};

// src/commands/StartDomainMaintenanceCommand.ts



var StartDomainMaintenanceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "StartDomainMaintenance", {}).n("OpenSearchClient", "StartDomainMaintenanceCommand").f(void 0, void 0).ser(se_StartDomainMaintenanceCommand).de(de_StartDomainMaintenanceCommand).build() {
  static {
    __name(this, "StartDomainMaintenanceCommand");
  }
};

// src/commands/StartServiceSoftwareUpdateCommand.ts



var StartServiceSoftwareUpdateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "StartServiceSoftwareUpdate", {}).n("OpenSearchClient", "StartServiceSoftwareUpdateCommand").f(void 0, void 0).ser(se_StartServiceSoftwareUpdateCommand).de(de_StartServiceSoftwareUpdateCommand).build() {
  static {
    __name(this, "StartServiceSoftwareUpdateCommand");
  }
};

// src/commands/UpdateApplicationCommand.ts



var UpdateApplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateApplication", {}).n("OpenSearchClient", "UpdateApplicationCommand").f(void 0, void 0).ser(se_UpdateApplicationCommand).de(de_UpdateApplicationCommand).build() {
  static {
    __name(this, "UpdateApplicationCommand");
  }
};

// src/commands/UpdateDataSourceCommand.ts



var UpdateDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateDataSource", {}).n("OpenSearchClient", "UpdateDataSourceCommand").f(void 0, void 0).ser(se_UpdateDataSourceCommand).de(de_UpdateDataSourceCommand).build() {
  static {
    __name(this, "UpdateDataSourceCommand");
  }
};

// src/commands/UpdateDirectQueryDataSourceCommand.ts



var UpdateDirectQueryDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateDirectQueryDataSource", {}).n("OpenSearchClient", "UpdateDirectQueryDataSourceCommand").f(void 0, void 0).ser(se_UpdateDirectQueryDataSourceCommand).de(de_UpdateDirectQueryDataSourceCommand).build() {
  static {
    __name(this, "UpdateDirectQueryDataSourceCommand");
  }
};

// src/commands/UpdateDomainConfigCommand.ts



var UpdateDomainConfigCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateDomainConfig", {}).n("OpenSearchClient", "UpdateDomainConfigCommand").f(UpdateDomainConfigRequestFilterSensitiveLog, void 0).ser(se_UpdateDomainConfigCommand).de(de_UpdateDomainConfigCommand).build() {
  static {
    __name(this, "UpdateDomainConfigCommand");
  }
};

// src/commands/UpdatePackageCommand.ts



var UpdatePackageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdatePackage", {}).n("OpenSearchClient", "UpdatePackageCommand").f(void 0, void 0).ser(se_UpdatePackageCommand).de(de_UpdatePackageCommand).build() {
  static {
    __name(this, "UpdatePackageCommand");
  }
};

// src/commands/UpdatePackageScopeCommand.ts



var UpdatePackageScopeCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdatePackageScope", {}).n("OpenSearchClient", "UpdatePackageScopeCommand").f(void 0, void 0).ser(se_UpdatePackageScopeCommand).de(de_UpdatePackageScopeCommand).build() {
  static {
    __name(this, "UpdatePackageScopeCommand");
  }
};

// src/commands/UpdateScheduledActionCommand.ts



var UpdateScheduledActionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateScheduledAction", {}).n("OpenSearchClient", "UpdateScheduledActionCommand").f(void 0, void 0).ser(se_UpdateScheduledActionCommand).de(de_UpdateScheduledActionCommand).build() {
  static {
    __name(this, "UpdateScheduledActionCommand");
  }
};

// src/commands/UpdateVpcEndpointCommand.ts



var UpdateVpcEndpointCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpdateVpcEndpoint", {}).n("OpenSearchClient", "UpdateVpcEndpointCommand").f(void 0, void 0).ser(se_UpdateVpcEndpointCommand).de(de_UpdateVpcEndpointCommand).build() {
  static {
    __name(this, "UpdateVpcEndpointCommand");
  }
};

// src/commands/UpgradeDomainCommand.ts



var UpgradeDomainCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AmazonOpenSearchService", "UpgradeDomain", {}).n("OpenSearchClient", "UpgradeDomainCommand").f(void 0, void 0).ser(se_UpgradeDomainCommand).de(de_UpgradeDomainCommand).build() {
  static {
    __name(this, "UpgradeDomainCommand");
  }
};

// src/OpenSearch.ts
var commands = {
  AcceptInboundConnectionCommand,
  AddDataSourceCommand,
  AddDirectQueryDataSourceCommand,
  AddTagsCommand,
  AssociatePackageCommand,
  AssociatePackagesCommand,
  AuthorizeVpcEndpointAccessCommand,
  CancelDomainConfigChangeCommand,
  CancelServiceSoftwareUpdateCommand,
  CreateApplicationCommand,
  CreateDomainCommand,
  CreateOutboundConnectionCommand,
  CreatePackageCommand,
  CreateVpcEndpointCommand,
  DeleteApplicationCommand,
  DeleteDataSourceCommand,
  DeleteDirectQueryDataSourceCommand,
  DeleteDomainCommand,
  DeleteInboundConnectionCommand,
  DeleteOutboundConnectionCommand,
  DeletePackageCommand,
  DeleteVpcEndpointCommand,
  DescribeDomainCommand,
  DescribeDomainAutoTunesCommand,
  DescribeDomainChangeProgressCommand,
  DescribeDomainConfigCommand,
  DescribeDomainHealthCommand,
  DescribeDomainNodesCommand,
  DescribeDomainsCommand,
  DescribeDryRunProgressCommand,
  DescribeInboundConnectionsCommand,
  DescribeInstanceTypeLimitsCommand,
  DescribeOutboundConnectionsCommand,
  DescribePackagesCommand,
  DescribeReservedInstanceOfferingsCommand,
  DescribeReservedInstancesCommand,
  DescribeVpcEndpointsCommand,
  DissociatePackageCommand,
  DissociatePackagesCommand,
  GetApplicationCommand,
  GetCompatibleVersionsCommand,
  GetDataSourceCommand,
  GetDirectQueryDataSourceCommand,
  GetDomainMaintenanceStatusCommand,
  GetPackageVersionHistoryCommand,
  GetUpgradeHistoryCommand,
  GetUpgradeStatusCommand,
  ListApplicationsCommand,
  ListDataSourcesCommand,
  ListDirectQueryDataSourcesCommand,
  ListDomainMaintenancesCommand,
  ListDomainNamesCommand,
  ListDomainsForPackageCommand,
  ListInstanceTypeDetailsCommand,
  ListPackagesForDomainCommand,
  ListScheduledActionsCommand,
  ListTagsCommand,
  ListVersionsCommand,
  ListVpcEndpointAccessCommand,
  ListVpcEndpointsCommand,
  ListVpcEndpointsForDomainCommand,
  PurchaseReservedInstanceOfferingCommand,
  RejectInboundConnectionCommand,
  RemoveTagsCommand,
  RevokeVpcEndpointAccessCommand,
  StartDomainMaintenanceCommand,
  StartServiceSoftwareUpdateCommand,
  UpdateApplicationCommand,
  UpdateDataSourceCommand,
  UpdateDirectQueryDataSourceCommand,
  UpdateDomainConfigCommand,
  UpdatePackageCommand,
  UpdatePackageScopeCommand,
  UpdateScheduledActionCommand,
  UpdateVpcEndpointCommand,
  UpgradeDomainCommand
};
var OpenSearch = class extends OpenSearchClient {
  static {
    __name(this, "OpenSearch");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, OpenSearch);

// src/pagination/DescribeDomainAutoTunesPaginator.ts

var paginateDescribeDomainAutoTunes = (0, import_core.createPaginator)(OpenSearchClient, DescribeDomainAutoTunesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeInboundConnectionsPaginator.ts

var paginateDescribeInboundConnections = (0, import_core.createPaginator)(OpenSearchClient, DescribeInboundConnectionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeOutboundConnectionsPaginator.ts

var paginateDescribeOutboundConnections = (0, import_core.createPaginator)(OpenSearchClient, DescribeOutboundConnectionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribePackagesPaginator.ts

var paginateDescribePackages = (0, import_core.createPaginator)(OpenSearchClient, DescribePackagesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeReservedInstanceOfferingsPaginator.ts

var paginateDescribeReservedInstanceOfferings = (0, import_core.createPaginator)(OpenSearchClient, DescribeReservedInstanceOfferingsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/DescribeReservedInstancesPaginator.ts

var paginateDescribeReservedInstances = (0, import_core.createPaginator)(OpenSearchClient, DescribeReservedInstancesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/GetPackageVersionHistoryPaginator.ts

var paginateGetPackageVersionHistory = (0, import_core.createPaginator)(OpenSearchClient, GetPackageVersionHistoryCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/GetUpgradeHistoryPaginator.ts

var paginateGetUpgradeHistory = (0, import_core.createPaginator)(OpenSearchClient, GetUpgradeHistoryCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListApplicationsPaginator.ts

var paginateListApplications = (0, import_core.createPaginator)(OpenSearchClient, ListApplicationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDomainMaintenancesPaginator.ts

var paginateListDomainMaintenances = (0, import_core.createPaginator)(OpenSearchClient, ListDomainMaintenancesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListDomainsForPackagePaginator.ts

var paginateListDomainsForPackage = (0, import_core.createPaginator)(OpenSearchClient, ListDomainsForPackageCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListInstanceTypeDetailsPaginator.ts

var paginateListInstanceTypeDetails = (0, import_core.createPaginator)(OpenSearchClient, ListInstanceTypeDetailsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListPackagesForDomainPaginator.ts

var paginateListPackagesForDomain = (0, import_core.createPaginator)(OpenSearchClient, ListPackagesForDomainCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListScheduledActionsPaginator.ts

var paginateListScheduledActions = (0, import_core.createPaginator)(OpenSearchClient, ListScheduledActionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListVersionsPaginator.ts

var paginateListVersions = (0, import_core.createPaginator)(OpenSearchClient, ListVersionsCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  OpenSearchServiceException,
  __Client,
  OpenSearchClient,
  OpenSearch,
  $Command,
  AcceptInboundConnectionCommand,
  AddDataSourceCommand,
  AddDirectQueryDataSourceCommand,
  AddTagsCommand,
  AssociatePackageCommand,
  AssociatePackagesCommand,
  AuthorizeVpcEndpointAccessCommand,
  CancelDomainConfigChangeCommand,
  CancelServiceSoftwareUpdateCommand,
  CreateApplicationCommand,
  CreateDomainCommand,
  CreateOutboundConnectionCommand,
  CreatePackageCommand,
  CreateVpcEndpointCommand,
  DeleteApplicationCommand,
  DeleteDataSourceCommand,
  DeleteDirectQueryDataSourceCommand,
  DeleteDomainCommand,
  DeleteInboundConnectionCommand,
  DeleteOutboundConnectionCommand,
  DeletePackageCommand,
  DeleteVpcEndpointCommand,
  DescribeDomainAutoTunesCommand,
  DescribeDomainChangeProgressCommand,
  DescribeDomainCommand,
  DescribeDomainConfigCommand,
  DescribeDomainHealthCommand,
  DescribeDomainNodesCommand,
  DescribeDomainsCommand,
  DescribeDryRunProgressCommand,
  DescribeInboundConnectionsCommand,
  DescribeInstanceTypeLimitsCommand,
  DescribeOutboundConnectionsCommand,
  DescribePackagesCommand,
  DescribeReservedInstanceOfferingsCommand,
  DescribeReservedInstancesCommand,
  DescribeVpcEndpointsCommand,
  DissociatePackageCommand,
  DissociatePackagesCommand,
  GetApplicationCommand,
  GetCompatibleVersionsCommand,
  GetDataSourceCommand,
  GetDirectQueryDataSourceCommand,
  GetDomainMaintenanceStatusCommand,
  GetPackageVersionHistoryCommand,
  GetUpgradeHistoryCommand,
  GetUpgradeStatusCommand,
  ListApplicationsCommand,
  ListDataSourcesCommand,
  ListDirectQueryDataSourcesCommand,
  ListDomainMaintenancesCommand,
  ListDomainNamesCommand,
  ListDomainsForPackageCommand,
  ListInstanceTypeDetailsCommand,
  ListPackagesForDomainCommand,
  ListScheduledActionsCommand,
  ListTagsCommand,
  ListVersionsCommand,
  ListVpcEndpointAccessCommand,
  ListVpcEndpointsCommand,
  ListVpcEndpointsForDomainCommand,
  PurchaseReservedInstanceOfferingCommand,
  RejectInboundConnectionCommand,
  RemoveTagsCommand,
  RevokeVpcEndpointAccessCommand,
  StartDomainMaintenanceCommand,
  StartServiceSoftwareUpdateCommand,
  UpdateApplicationCommand,
  UpdateDataSourceCommand,
  UpdateDirectQueryDataSourceCommand,
  UpdateDomainConfigCommand,
  UpdatePackageCommand,
  UpdatePackageScopeCommand,
  UpdateScheduledActionCommand,
  UpdateVpcEndpointCommand,
  UpgradeDomainCommand,
  paginateDescribeDomainAutoTunes,
  paginateDescribeInboundConnections,
  paginateDescribeOutboundConnections,
  paginateDescribePackages,
  paginateDescribeReservedInstanceOfferings,
  paginateDescribeReservedInstances,
  paginateGetPackageVersionHistory,
  paginateGetUpgradeHistory,
  paginateListApplications,
  paginateListDomainMaintenances,
  paginateListDomainsForPackage,
  paginateListInstanceTypeDetails,
  paginateListPackagesForDomain,
  paginateListScheduledActions,
  paginateListVersions,
  ConnectionMode,
  InboundConnectionStatusCode,
  DisabledOperationException,
  LimitExceededException,
  ResourceNotFoundException,
  AccessDeniedException,
  OptionState,
  ActionSeverity,
  ActionStatus,
  ActionType,
  DataSourceType,
  BaseException,
  DependencyFailureException,
  InternalException,
  ValidationException,
  DirectQueryDataSourceType,
  NaturalLanguageQueryGenerationDesiredState,
  NaturalLanguageQueryGenerationCurrentState,
  DomainPackageStatus,
  PackageType,
  ConflictException,
  AWSServicePrincipal,
  PrincipalType,
  DeploymentStatus,
  AppConfigType,
  AutoTuneDesiredState,
  TimeUnit,
  OpenSearchPartitionInstanceType,
  NodeOptionsNodeType,
  OpenSearchWarmPartitionInstanceType,
  TLSSecurityPolicy,
  VolumeType,
  RolesKeyIdCOption,
  SubjectKeyIdCOption,
  IPAddressType,
  LogType,
  AutoTuneState,
  ConfigChangeStatus,
  InitiatedBy,
  DomainProcessingStatusType,
  PropertyValueType,
  InvalidTypeException,
  ResourceAlreadyExistsException,
  SkipUnavailableStatus,
  OutboundConnectionStatusCode,
  RequirementLevel,
  PackageStatus,
  VpcEndpointStatus,
  ScheduledAutoTuneActionType,
  ScheduledAutoTuneSeverityType,
  AutoTuneType,
  OverallChangeStatus,
  RollbackOnDisable,
  DomainHealth,
  DomainState,
  ZoneStatus,
  MasterNodeStatus,
  NodeStatus,
  NodeType,
  InvalidPaginationTokenException,
  DescribePackagesFilterName,
  ReservedInstancePaymentOption,
  VpcEndpointErrorCode,
  ApplicationStatus,
  DataSourceStatus,
  MaintenanceType,
  MaintenanceStatus,
  UpgradeStep,
  UpgradeStatus,
  EngineType,
  MasterUserOptionsFilterSensitiveLog,
  SAMLOptionsInputFilterSensitiveLog,
  AdvancedSecurityOptionsInputFilterSensitiveLog,
  CreateDomainRequestFilterSensitiveLog,
  ScheduledBy,
  ScheduleAt,
  DryRunMode,
  PackageScopeOperationEnum,
  SlotNotAvailableException,
  UpdateDomainConfigRequestFilterSensitiveLog
});

