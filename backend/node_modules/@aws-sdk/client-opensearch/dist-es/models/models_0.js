import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { OpenSearchServiceException as __BaseException } from "./OpenSearchServiceException";
export const ConnectionMode = {
    DIRECT: "DIRECT",
    VPC_ENDPOINT: "VPC_ENDPOINT",
};
export const InboundConnectionStatusCode = {
    ACTIVE: "ACTIVE",
    APPROVED: "APPROVED",
    DELETED: "DELETED",
    DELETING: "DELETING",
    PENDING_ACCEPTANCE: "PENDING_ACCEPTANCE",
    PROVISIONING: "PROVISIONING",
    REJECTED: "REJECTED",
    REJECTING: "REJECTING",
};
export class DisabledOperationException extends __BaseException {
    name = "DisabledOperationException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "DisabledOperationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DisabledOperationException.prototype);
    }
}
export class LimitExceededException extends __BaseException {
    name = "LimitExceededException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export const OptionState = {
    Active: "Active",
    Processing: "Processing",
    RequiresIndexDocuments: "RequiresIndexDocuments",
};
export const ActionSeverity = {
    HIGH: "HIGH",
    LOW: "LOW",
    MEDIUM: "MEDIUM",
};
export const ActionStatus = {
    COMPLETED: "COMPLETED",
    ELIGIBLE: "ELIGIBLE",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    NOT_ELIGIBLE: "NOT_ELIGIBLE",
    PENDING_UPDATE: "PENDING_UPDATE",
};
export const ActionType = {
    JVM_HEAP_SIZE_TUNING: "JVM_HEAP_SIZE_TUNING",
    JVM_YOUNG_GEN_TUNING: "JVM_YOUNG_GEN_TUNING",
    SERVICE_SOFTWARE_UPDATE: "SERVICE_SOFTWARE_UPDATE",
};
export var DataSourceType;
(function (DataSourceType) {
    DataSourceType.visit = (value, visitor) => {
        if (value.S3GlueDataCatalog !== undefined)
            return visitor.S3GlueDataCatalog(value.S3GlueDataCatalog);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DataSourceType || (DataSourceType = {}));
export class BaseException extends __BaseException {
    name = "BaseException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "BaseException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, BaseException.prototype);
    }
}
export class DependencyFailureException extends __BaseException {
    name = "DependencyFailureException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "DependencyFailureException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DependencyFailureException.prototype);
    }
}
export class InternalException extends __BaseException {
    name = "InternalException";
    $fault = "server";
    constructor(opts) {
        super({
            name: "InternalException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalException.prototype);
    }
}
export class ValidationException extends __BaseException {
    name = "ValidationException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export var DirectQueryDataSourceType;
(function (DirectQueryDataSourceType) {
    DirectQueryDataSourceType.visit = (value, visitor) => {
        if (value.CloudWatchLog !== undefined)
            return visitor.CloudWatchLog(value.CloudWatchLog);
        if (value.SecurityLake !== undefined)
            return visitor.SecurityLake(value.SecurityLake);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DirectQueryDataSourceType || (DirectQueryDataSourceType = {}));
export const NaturalLanguageQueryGenerationDesiredState = {
    Disabled: "DISABLED",
    Enabled: "ENABLED",
};
export const NaturalLanguageQueryGenerationCurrentState = {
    DisableComplete: "DISABLE_COMPLETE",
    DisableFailed: "DISABLE_FAILED",
    DisableInProgress: "DISABLE_IN_PROGRESS",
    EnableComplete: "ENABLE_COMPLETE",
    EnableFailed: "ENABLE_FAILED",
    EnableInProgress: "ENABLE_IN_PROGRESS",
    NotEnabled: "NOT_ENABLED",
};
export const DomainPackageStatus = {
    ACTIVE: "ACTIVE",
    ASSOCIATING: "ASSOCIATING",
    ASSOCIATION_FAILED: "ASSOCIATION_FAILED",
    DISSOCIATING: "DISSOCIATING",
    DISSOCIATION_FAILED: "DISSOCIATION_FAILED",
};
export const PackageType = {
    PACKAGE_CONFIG: "PACKAGE-CONFIG",
    PACKAGE_LICENSE: "PACKAGE-LICENSE",
    TXT_DICTIONARY: "TXT-DICTIONARY",
    ZIP_PLUGIN: "ZIP-PLUGIN",
};
export class ConflictException extends __BaseException {
    name = "ConflictException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export const AWSServicePrincipal = {
    application_opensearchservice_amazonaws_com: "application.opensearchservice.amazonaws.com",
};
export const PrincipalType = {
    AWS_ACCOUNT: "AWS_ACCOUNT",
    AWS_SERVICE: "AWS_SERVICE",
};
export const DeploymentStatus = {
    COMPLETED: "COMPLETED",
    ELIGIBLE: "ELIGIBLE",
    IN_PROGRESS: "IN_PROGRESS",
    NOT_ELIGIBLE: "NOT_ELIGIBLE",
    PENDING_UPDATE: "PENDING_UPDATE",
};
export const AppConfigType = {
    OpensearchDashboardAdminGroups: "opensearchDashboards.dashboardAdmin.groups",
    OpensearchDashboardAdminUsers: "opensearchDashboards.dashboardAdmin.users",
};
export const AutoTuneDesiredState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const TimeUnit = {
    HOURS: "HOURS",
};
export const OpenSearchPartitionInstanceType = {
    c4_2xlarge_search: "c4.2xlarge.search",
    c4_4xlarge_search: "c4.4xlarge.search",
    c4_8xlarge_search: "c4.8xlarge.search",
    c4_large_search: "c4.large.search",
    c4_xlarge_search: "c4.xlarge.search",
    c5_18xlarge_search: "c5.18xlarge.search",
    c5_2xlarge_search: "c5.2xlarge.search",
    c5_4xlarge_search: "c5.4xlarge.search",
    c5_9xlarge_search: "c5.9xlarge.search",
    c5_large_search: "c5.large.search",
    c5_xlarge_search: "c5.xlarge.search",
    c6g_12xlarge_search: "c6g.12xlarge.search",
    c6g_2xlarge_search: "c6g.2xlarge.search",
    c6g_4xlarge_search: "c6g.4xlarge.search",
    c6g_8xlarge_search: "c6g.8xlarge.search",
    c6g_large_search: "c6g.large.search",
    c6g_xlarge_search: "c6g.xlarge.search",
    d2_2xlarge_search: "d2.2xlarge.search",
    d2_4xlarge_search: "d2.4xlarge.search",
    d2_8xlarge_search: "d2.8xlarge.search",
    d2_xlarge_search: "d2.xlarge.search",
    i2_2xlarge_search: "i2.2xlarge.search",
    i2_xlarge_search: "i2.xlarge.search",
    i3_16xlarge_search: "i3.16xlarge.search",
    i3_2xlarge_search: "i3.2xlarge.search",
    i3_4xlarge_search: "i3.4xlarge.search",
    i3_8xlarge_search: "i3.8xlarge.search",
    i3_large_search: "i3.large.search",
    i3_xlarge_search: "i3.xlarge.search",
    m3_2xlarge_search: "m3.2xlarge.search",
    m3_large_search: "m3.large.search",
    m3_medium_search: "m3.medium.search",
    m3_xlarge_search: "m3.xlarge.search",
    m4_10xlarge_search: "m4.10xlarge.search",
    m4_2xlarge_search: "m4.2xlarge.search",
    m4_4xlarge_search: "m4.4xlarge.search",
    m4_large_search: "m4.large.search",
    m4_xlarge_search: "m4.xlarge.search",
    m5_12xlarge_search: "m5.12xlarge.search",
    m5_24xlarge_search: "m5.24xlarge.search",
    m5_2xlarge_search: "m5.2xlarge.search",
    m5_4xlarge_search: "m5.4xlarge.search",
    m5_large_search: "m5.large.search",
    m5_xlarge_search: "m5.xlarge.search",
    m6g_12xlarge_search: "m6g.12xlarge.search",
    m6g_2xlarge_search: "m6g.2xlarge.search",
    m6g_4xlarge_search: "m6g.4xlarge.search",
    m6g_8xlarge_search: "m6g.8xlarge.search",
    m6g_large_search: "m6g.large.search",
    m6g_xlarge_search: "m6g.xlarge.search",
    or1_12xlarge_search: "or1.12xlarge.search",
    or1_16xlarge_search: "or1.16xlarge.search",
    or1_2xlarge_search: "or1.2xlarge.search",
    or1_4xlarge_search: "or1.4xlarge.search",
    or1_8xlarge_search: "or1.8xlarge.search",
    or1_large_search: "or1.large.search",
    or1_medium_search: "or1.medium.search",
    or1_xlarge_search: "or1.xlarge.search",
    r3_2xlarge_search: "r3.2xlarge.search",
    r3_4xlarge_search: "r3.4xlarge.search",
    r3_8xlarge_search: "r3.8xlarge.search",
    r3_large_search: "r3.large.search",
    r3_xlarge_search: "r3.xlarge.search",
    r4_16xlarge_search: "r4.16xlarge.search",
    r4_2xlarge_search: "r4.2xlarge.search",
    r4_4xlarge_search: "r4.4xlarge.search",
    r4_8xlarge_search: "r4.8xlarge.search",
    r4_large_search: "r4.large.search",
    r4_xlarge_search: "r4.xlarge.search",
    r5_12xlarge_search: "r5.12xlarge.search",
    r5_24xlarge_search: "r5.24xlarge.search",
    r5_2xlarge_search: "r5.2xlarge.search",
    r5_4xlarge_search: "r5.4xlarge.search",
    r5_large_search: "r5.large.search",
    r5_xlarge_search: "r5.xlarge.search",
    r6g_12xlarge_search: "r6g.12xlarge.search",
    r6g_2xlarge_search: "r6g.2xlarge.search",
    r6g_4xlarge_search: "r6g.4xlarge.search",
    r6g_8xlarge_search: "r6g.8xlarge.search",
    r6g_large_search: "r6g.large.search",
    r6g_xlarge_search: "r6g.xlarge.search",
    r6gd_12xlarge_search: "r6gd.12xlarge.search",
    r6gd_16xlarge_search: "r6gd.16xlarge.search",
    r6gd_2xlarge_search: "r6gd.2xlarge.search",
    r6gd_4xlarge_search: "r6gd.4xlarge.search",
    r6gd_8xlarge_search: "r6gd.8xlarge.search",
    r6gd_large_search: "r6gd.large.search",
    r6gd_xlarge_search: "r6gd.xlarge.search",
    t2_medium_search: "t2.medium.search",
    t2_micro_search: "t2.micro.search",
    t2_small_search: "t2.small.search",
    t3_2xlarge_search: "t3.2xlarge.search",
    t3_large_search: "t3.large.search",
    t3_medium_search: "t3.medium.search",
    t3_micro_search: "t3.micro.search",
    t3_nano_search: "t3.nano.search",
    t3_small_search: "t3.small.search",
    t3_xlarge_search: "t3.xlarge.search",
    t4g_medium_search: "t4g.medium.search",
    t4g_small_search: "t4g.small.search",
    ultrawarm1_large_search: "ultrawarm1.large.search",
    ultrawarm1_medium_search: "ultrawarm1.medium.search",
    ultrawarm1_xlarge_search: "ultrawarm1.xlarge.search",
};
export const NodeOptionsNodeType = {
    COORDINATOR: "coordinator",
};
export const OpenSearchWarmPartitionInstanceType = {
    ultrawarm1_large_search: "ultrawarm1.large.search",
    ultrawarm1_medium_search: "ultrawarm1.medium.search",
    ultrawarm1_xlarge_search: "ultrawarm1.xlarge.search",
};
export const TLSSecurityPolicy = {
    POLICY_MIN_TLS_1_0_2019_07: "Policy-Min-TLS-1-0-2019-07",
    POLICY_MIN_TLS_1_2_2019_07: "Policy-Min-TLS-1-2-2019-07",
    POLICY_MIN_TLS_1_2_PFS_2023_10: "Policy-Min-TLS-1-2-PFS-2023-10",
};
export const VolumeType = {
    gp2: "gp2",
    gp3: "gp3",
    io1: "io1",
    standard: "standard",
};
export const RolesKeyIdCOption = {
    GroupId: "GroupId",
    GroupName: "GroupName",
};
export const SubjectKeyIdCOption = {
    Email: "Email",
    UserId: "UserId",
    UserName: "UserName",
};
export const IPAddressType = {
    DUALSTACK: "dualstack",
    IPV4: "ipv4",
};
export const LogType = {
    AUDIT_LOGS: "AUDIT_LOGS",
    ES_APPLICATION_LOGS: "ES_APPLICATION_LOGS",
    INDEX_SLOW_LOGS: "INDEX_SLOW_LOGS",
    SEARCH_SLOW_LOGS: "SEARCH_SLOW_LOGS",
};
export const AutoTuneState = {
    DISABLED: "DISABLED",
    DISABLED_AND_ROLLBACK_COMPLETE: "DISABLED_AND_ROLLBACK_COMPLETE",
    DISABLED_AND_ROLLBACK_ERROR: "DISABLED_AND_ROLLBACK_ERROR",
    DISABLED_AND_ROLLBACK_IN_PROGRESS: "DISABLED_AND_ROLLBACK_IN_PROGRESS",
    DISABLED_AND_ROLLBACK_SCHEDULED: "DISABLED_AND_ROLLBACK_SCHEDULED",
    DISABLE_IN_PROGRESS: "DISABLE_IN_PROGRESS",
    ENABLED: "ENABLED",
    ENABLE_IN_PROGRESS: "ENABLE_IN_PROGRESS",
    ERROR: "ERROR",
};
export const ConfigChangeStatus = {
    APPLYING_CHANGES: "ApplyingChanges",
    CANCELLED: "Cancelled",
    COMPLETED: "Completed",
    INITIALIZING: "Initializing",
    PENDING: "Pending",
    PENDING_USER_INPUT: "PendingUserInput",
    VALIDATING: "Validating",
    VALIDATION_FAILED: "ValidationFailed",
};
export const InitiatedBy = {
    CUSTOMER: "CUSTOMER",
    SERVICE: "SERVICE",
};
export const DomainProcessingStatusType = {
    ACTIVE: "Active",
    CREATING: "Creating",
    DELETING: "Deleting",
    ISOLATED: "Isolated",
    MODIFYING: "Modifying",
    UPDATING: "UpdatingServiceSoftware",
    UPGRADING: "UpgradingEngineVersion",
};
export const PropertyValueType = {
    PLAIN_TEXT: "PLAIN_TEXT",
    STRINGIFIED_JSON: "STRINGIFIED_JSON",
};
export class InvalidTypeException extends __BaseException {
    name = "InvalidTypeException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidTypeException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidTypeException.prototype);
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    name = "ResourceAlreadyExistsException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
    }
}
export const SkipUnavailableStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const OutboundConnectionStatusCode = {
    ACTIVE: "ACTIVE",
    APPROVED: "APPROVED",
    DELETED: "DELETED",
    DELETING: "DELETING",
    PENDING_ACCEPTANCE: "PENDING_ACCEPTANCE",
    PROVISIONING: "PROVISIONING",
    REJECTED: "REJECTED",
    REJECTING: "REJECTING",
    VALIDATING: "VALIDATING",
    VALIDATION_FAILED: "VALIDATION_FAILED",
};
export const RequirementLevel = {
    NONE: "NONE",
    OPTIONAL: "OPTIONAL",
    REQUIRED: "REQUIRED",
};
export const PackageStatus = {
    AVAILABLE: "AVAILABLE",
    COPYING: "COPYING",
    COPY_FAILED: "COPY_FAILED",
    DELETED: "DELETED",
    DELETE_FAILED: "DELETE_FAILED",
    DELETING: "DELETING",
    VALIDATING: "VALIDATING",
    VALIDATION_FAILED: "VALIDATION_FAILED",
};
export const VpcEndpointStatus = {
    ACTIVE: "ACTIVE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DELETE_FAILED: "DELETE_FAILED",
    DELETING: "DELETING",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATING: "UPDATING",
};
export const ScheduledAutoTuneActionType = {
    JVM_HEAP_SIZE_TUNING: "JVM_HEAP_SIZE_TUNING",
    JVM_YOUNG_GEN_TUNING: "JVM_YOUNG_GEN_TUNING",
};
export const ScheduledAutoTuneSeverityType = {
    HIGH: "HIGH",
    LOW: "LOW",
    MEDIUM: "MEDIUM",
};
export const AutoTuneType = {
    SCHEDULED_ACTION: "SCHEDULED_ACTION",
};
export const OverallChangeStatus = {
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    PENDING: "PENDING",
    PROCESSING: "PROCESSING",
};
export const RollbackOnDisable = {
    DEFAULT_ROLLBACK: "DEFAULT_ROLLBACK",
    NO_ROLLBACK: "NO_ROLLBACK",
};
export const DomainHealth = {
    Green: "Green",
    NotAvailable: "NotAvailable",
    Red: "Red",
    Yellow: "Yellow",
};
export const DomainState = {
    Active: "Active",
    NotAvailable: "NotAvailable",
    Processing: "Processing",
};
export const ZoneStatus = {
    Active: "Active",
    NotAvailable: "NotAvailable",
    StandBy: "StandBy",
};
export const MasterNodeStatus = {
    Available: "Available",
    UnAvailable: "UnAvailable",
};
export const NodeStatus = {
    Active: "Active",
    NotAvailable: "NotAvailable",
    StandBy: "StandBy",
};
export const NodeType = {
    Data: "Data",
    Master: "Master",
    Ultrawarm: "Ultrawarm",
};
export class InvalidPaginationTokenException extends __BaseException {
    name = "InvalidPaginationTokenException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidPaginationTokenException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidPaginationTokenException.prototype);
    }
}
export const DescribePackagesFilterName = {
    EngineVersion: "EngineVersion",
    PackageID: "PackageID",
    PackageName: "PackageName",
    PackageOwner: "PackageOwner",
    PackageStatus: "PackageStatus",
    PackageType: "PackageType",
};
export const ReservedInstancePaymentOption = {
    ALL_UPFRONT: "ALL_UPFRONT",
    NO_UPFRONT: "NO_UPFRONT",
    PARTIAL_UPFRONT: "PARTIAL_UPFRONT",
};
export const VpcEndpointErrorCode = {
    ENDPOINT_NOT_FOUND: "ENDPOINT_NOT_FOUND",
    SERVER_ERROR: "SERVER_ERROR",
};
export const ApplicationStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    UPDATING: "UPDATING",
};
export const DataSourceStatus = {
    ACTIVE: "ACTIVE",
    DISABLED: "DISABLED",
};
export const MaintenanceType = {
    REBOOT_NODE: "REBOOT_NODE",
    RESTART_DASHBOARD: "RESTART_DASHBOARD",
    RESTART_SEARCH_PROCESS: "RESTART_SEARCH_PROCESS",
};
export const MaintenanceStatus = {
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    PENDING: "PENDING",
    TIMED_OUT: "TIMED_OUT",
};
export const UpgradeStep = {
    PRE_UPGRADE_CHECK: "PRE_UPGRADE_CHECK",
    SNAPSHOT: "SNAPSHOT",
    UPGRADE: "UPGRADE",
};
export const UpgradeStatus = {
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    SUCCEEDED: "SUCCEEDED",
    SUCCEEDED_WITH_ISSUES: "SUCCEEDED_WITH_ISSUES",
};
export const EngineType = {
    Elasticsearch: "Elasticsearch",
    OpenSearch: "OpenSearch",
};
export const MasterUserOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MasterUserName && { MasterUserName: SENSITIVE_STRING }),
    ...(obj.MasterUserPassword && { MasterUserPassword: SENSITIVE_STRING }),
});
export const SAMLOptionsInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MasterUserName && { MasterUserName: SENSITIVE_STRING }),
});
export const AdvancedSecurityOptionsInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MasterUserOptions && { MasterUserOptions: MasterUserOptionsFilterSensitiveLog(obj.MasterUserOptions) }),
    ...(obj.SAMLOptions && { SAMLOptions: SAMLOptionsInputFilterSensitiveLog(obj.SAMLOptions) }),
});
export const CreateDomainRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AdvancedSecurityOptions && {
        AdvancedSecurityOptions: AdvancedSecurityOptionsInputFilterSensitiveLog(obj.AdvancedSecurityOptions),
    }),
});
