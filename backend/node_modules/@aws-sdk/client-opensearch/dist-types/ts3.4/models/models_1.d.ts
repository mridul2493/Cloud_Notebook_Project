import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import {
  ActionSeverity,
  ActionStatus,
  ActionType,
  AdvancedSecurityOptionsInput,
  AIMLOptionsInput,
  AppConfig,
  AuthorizedPrincipal,
  AutoTuneOptions,
  AWSServicePrincipal,
  ChangeProgressDetails,
  ClusterConfig,
  CognitoOptions,
  DataSource,
  DataSourceStatus,
  DataSourceType,
  DirectQueryDataSourceType,
  DomainConfig,
  DomainEndpointOptions,
  DomainInfo,
  DomainPackageDetails,
  DryRunProgressStatus,
  DryRunResults,
  EBSOptions,
  EncryptionAtRestOptions,
  IamIdentityCenterOptions,
  IdentityCenterOptionsInput,
  InboundConnection,
  IPAddressType,
  LogPublishingOption,
  LogType,
  MaintenanceType,
  NodeToNodeEncryptionOptions,
  OffPeakWindowOptions,
  OpenSearchPartitionInstanceType,
  PackageConfiguration,
  PackageDetails,
  PackageEncryptionOptions,
  PackageSource,
  ServiceSoftwareOptions,
  SnapshotOptions,
  SoftwareUpdateOptions,
  Tag,
  VpcEndpoint,
  VpcEndpointSummary,
  VPCOptions,
} from "./models_0";
import { OpenSearchServiceException as __BaseException } from "./OpenSearchServiceException";
export interface ListDomainNamesResponse {
  DomainNames?: DomainInfo[] | undefined;
}
export interface ListDomainsForPackageRequest {
  PackageID: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListDomainsForPackageResponse {
  DomainPackageDetailsList?: DomainPackageDetails[] | undefined;
  NextToken?: string | undefined;
}
export interface ListInstanceTypeDetailsRequest {
  EngineVersion: string | undefined;
  DomainName?: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  RetrieveAZs?: boolean | undefined;
  InstanceType?: string | undefined;
}
export interface InstanceTypeDetails {
  InstanceType?: OpenSearchPartitionInstanceType | undefined;
  EncryptionEnabled?: boolean | undefined;
  CognitoEnabled?: boolean | undefined;
  AppLogsEnabled?: boolean | undefined;
  AdvancedSecurityEnabled?: boolean | undefined;
  WarmEnabled?: boolean | undefined;
  InstanceRole?: string[] | undefined;
  AvailabilityZones?: string[] | undefined;
}
export interface ListInstanceTypeDetailsResponse {
  InstanceTypeDetails?: InstanceTypeDetails[] | undefined;
  NextToken?: string | undefined;
}
export interface ListPackagesForDomainRequest {
  DomainName: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListPackagesForDomainResponse {
  DomainPackageDetailsList?: DomainPackageDetails[] | undefined;
  NextToken?: string | undefined;
}
export interface ListScheduledActionsRequest {
  DomainName: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export declare const ScheduledBy: {
  readonly CUSTOMER: "CUSTOMER";
  readonly SYSTEM: "SYSTEM";
};
export type ScheduledBy = (typeof ScheduledBy)[keyof typeof ScheduledBy];
export interface ScheduledAction {
  Id: string | undefined;
  Type: ActionType | undefined;
  Severity: ActionSeverity | undefined;
  ScheduledTime: number | undefined;
  Description?: string | undefined;
  ScheduledBy?: ScheduledBy | undefined;
  Status?: ActionStatus | undefined;
  Mandatory?: boolean | undefined;
  Cancellable?: boolean | undefined;
}
export interface ListScheduledActionsResponse {
  ScheduledActions?: ScheduledAction[] | undefined;
  NextToken?: string | undefined;
}
export interface ListTagsRequest {
  ARN: string | undefined;
}
export interface ListTagsResponse {
  TagList?: Tag[] | undefined;
}
export interface ListVersionsRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListVersionsResponse {
  Versions?: string[] | undefined;
  NextToken?: string | undefined;
}
export interface ListVpcEndpointAccessRequest {
  DomainName: string | undefined;
  NextToken?: string | undefined;
}
export interface ListVpcEndpointAccessResponse {
  AuthorizedPrincipalList: AuthorizedPrincipal[] | undefined;
  NextToken: string | undefined;
}
export interface ListVpcEndpointsRequest {
  NextToken?: string | undefined;
}
export interface ListVpcEndpointsResponse {
  VpcEndpointSummaryList: VpcEndpointSummary[] | undefined;
  NextToken: string | undefined;
}
export interface ListVpcEndpointsForDomainRequest {
  DomainName: string | undefined;
  NextToken?: string | undefined;
}
export interface ListVpcEndpointsForDomainResponse {
  VpcEndpointSummaryList: VpcEndpointSummary[] | undefined;
  NextToken: string | undefined;
}
export interface PurchaseReservedInstanceOfferingRequest {
  ReservedInstanceOfferingId: string | undefined;
  ReservationName: string | undefined;
  InstanceCount?: number | undefined;
}
export interface PurchaseReservedInstanceOfferingResponse {
  ReservedInstanceId?: string | undefined;
  ReservationName?: string | undefined;
}
export interface RejectInboundConnectionRequest {
  ConnectionId: string | undefined;
}
export interface RejectInboundConnectionResponse {
  Connection?: InboundConnection | undefined;
}
export interface RemoveTagsRequest {
  ARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface RevokeVpcEndpointAccessRequest {
  DomainName: string | undefined;
  Account?: string | undefined;
  Service?: AWSServicePrincipal | undefined;
}
export interface RevokeVpcEndpointAccessResponse {}
export interface StartDomainMaintenanceRequest {
  DomainName: string | undefined;
  Action: MaintenanceType | undefined;
  NodeId?: string | undefined;
}
export interface StartDomainMaintenanceResponse {
  MaintenanceId?: string | undefined;
}
export declare const ScheduleAt: {
  readonly NOW: "NOW";
  readonly OFF_PEAK_WINDOW: "OFF_PEAK_WINDOW";
  readonly TIMESTAMP: "TIMESTAMP";
};
export type ScheduleAt = (typeof ScheduleAt)[keyof typeof ScheduleAt];
export interface StartServiceSoftwareUpdateRequest {
  DomainName: string | undefined;
  ScheduleAt?: ScheduleAt | undefined;
  DesiredStartTime?: number | undefined;
}
export interface StartServiceSoftwareUpdateResponse {
  ServiceSoftwareOptions?: ServiceSoftwareOptions | undefined;
}
export interface UpdateApplicationRequest {
  id: string | undefined;
  dataSources?: DataSource[] | undefined;
  appConfigs?: AppConfig[] | undefined;
}
export interface UpdateApplicationResponse {
  id?: string | undefined;
  name?: string | undefined;
  arn?: string | undefined;
  dataSources?: DataSource[] | undefined;
  iamIdentityCenterOptions?: IamIdentityCenterOptions | undefined;
  appConfigs?: AppConfig[] | undefined;
  createdAt?: Date | undefined;
  lastUpdatedAt?: Date | undefined;
}
export interface UpdateDataSourceRequest {
  DomainName: string | undefined;
  Name: string | undefined;
  DataSourceType: DataSourceType | undefined;
  Description?: string | undefined;
  Status?: DataSourceStatus | undefined;
}
export interface UpdateDataSourceResponse {
  Message?: string | undefined;
}
export interface UpdateDirectQueryDataSourceRequest {
  DataSourceName: string | undefined;
  DataSourceType: DirectQueryDataSourceType | undefined;
  Description?: string | undefined;
  OpenSearchArns: string[] | undefined;
}
export interface UpdateDirectQueryDataSourceResponse {
  DataSourceArn?: string | undefined;
}
export declare const DryRunMode: {
  readonly Basic: "Basic";
  readonly Verbose: "Verbose";
};
export type DryRunMode = (typeof DryRunMode)[keyof typeof DryRunMode];
export interface UpdateDomainConfigRequest {
  DomainName: string | undefined;
  ClusterConfig?: ClusterConfig | undefined;
  EBSOptions?: EBSOptions | undefined;
  SnapshotOptions?: SnapshotOptions | undefined;
  VPCOptions?: VPCOptions | undefined;
  CognitoOptions?: CognitoOptions | undefined;
  AdvancedOptions?: Record<string, string> | undefined;
  AccessPolicies?: string | undefined;
  IPAddressType?: IPAddressType | undefined;
  LogPublishingOptions?:
    | Partial<Record<LogType, LogPublishingOption>>
    | undefined;
  EncryptionAtRestOptions?: EncryptionAtRestOptions | undefined;
  DomainEndpointOptions?: DomainEndpointOptions | undefined;
  NodeToNodeEncryptionOptions?: NodeToNodeEncryptionOptions | undefined;
  AdvancedSecurityOptions?: AdvancedSecurityOptionsInput | undefined;
  IdentityCenterOptions?: IdentityCenterOptionsInput | undefined;
  AutoTuneOptions?: AutoTuneOptions | undefined;
  DryRun?: boolean | undefined;
  DryRunMode?: DryRunMode | undefined;
  OffPeakWindowOptions?: OffPeakWindowOptions | undefined;
  SoftwareUpdateOptions?: SoftwareUpdateOptions | undefined;
  AIMLOptions?: AIMLOptionsInput | undefined;
}
export interface UpdateDomainConfigResponse {
  DomainConfig: DomainConfig | undefined;
  DryRunResults?: DryRunResults | undefined;
  DryRunProgressStatus?: DryRunProgressStatus | undefined;
}
export interface UpdatePackageRequest {
  PackageID: string | undefined;
  PackageSource: PackageSource | undefined;
  PackageDescription?: string | undefined;
  CommitMessage?: string | undefined;
  PackageConfiguration?: PackageConfiguration | undefined;
  PackageEncryptionOptions?: PackageEncryptionOptions | undefined;
}
export interface UpdatePackageResponse {
  PackageDetails?: PackageDetails | undefined;
}
export declare const PackageScopeOperationEnum: {
  readonly ADD: "ADD";
  readonly OVERRIDE: "OVERRIDE";
  readonly REMOVE: "REMOVE";
};
export type PackageScopeOperationEnum =
  (typeof PackageScopeOperationEnum)[keyof typeof PackageScopeOperationEnum];
export interface UpdatePackageScopeRequest {
  PackageID: string | undefined;
  Operation: PackageScopeOperationEnum | undefined;
  PackageUserList: string[] | undefined;
}
export interface UpdatePackageScopeResponse {
  PackageID?: string | undefined;
  Operation?: PackageScopeOperationEnum | undefined;
  PackageUserList?: string[] | undefined;
}
export declare class SlotNotAvailableException extends __BaseException {
  readonly name: "SlotNotAvailableException";
  readonly $fault: "client";
  SlotSuggestions?: number[] | undefined;
  constructor(
    opts: __ExceptionOptionType<SlotNotAvailableException, __BaseException>
  );
}
export interface UpdateScheduledActionRequest {
  DomainName: string | undefined;
  ActionID: string | undefined;
  ActionType: ActionType | undefined;
  ScheduleAt: ScheduleAt | undefined;
  DesiredStartTime?: number | undefined;
}
export interface UpdateScheduledActionResponse {
  ScheduledAction?: ScheduledAction | undefined;
}
export interface UpdateVpcEndpointRequest {
  VpcEndpointId: string | undefined;
  VpcOptions: VPCOptions | undefined;
}
export interface UpdateVpcEndpointResponse {
  VpcEndpoint: VpcEndpoint | undefined;
}
export interface UpgradeDomainRequest {
  DomainName: string | undefined;
  TargetVersion: string | undefined;
  PerformCheckOnly?: boolean | undefined;
  AdvancedOptions?: Record<string, string> | undefined;
}
export interface UpgradeDomainResponse {
  UpgradeId?: string | undefined;
  DomainName?: string | undefined;
  TargetVersion?: string | undefined;
  PerformCheckOnly?: boolean | undefined;
  AdvancedOptions?: Record<string, string> | undefined;
  ChangeProgressDetails?: ChangeProgressDetails | undefined;
}
export declare const UpdateDomainConfigRequestFilterSensitiveLog: (
  obj: UpdateDomainConfigRequest
) => any;
